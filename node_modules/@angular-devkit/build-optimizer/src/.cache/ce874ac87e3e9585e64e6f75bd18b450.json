{"remainingRequest":"C:\\Users\\t.berro\\Desktop\\PWAClient\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\t.berro\\Desktop\\PWAClient\\node_modules\\date-fns\\get_day\\index.js","dependencies":[{"path":"C:\\Users\\t.berro\\Desktop\\PWAClient\\node_modules\\date-fns\\get_day\\index.js","mtime":1507723136000},{"path":"C:\\Users\\t.berro\\Desktop\\PWAClient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1522842588765},{"path":"C:\\Users\\t.berro\\Desktop\\PWAClient\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["var parse = require('../parse/index.js')\n\n/**\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the day of week\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * var result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\nfunction getDay (dirtyDate) {\n  var date = parse(dirtyDate)\n  var day = date.getDay()\n  return day\n}\n\nmodule.exports = getDay\n",null]}