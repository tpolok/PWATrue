{"remainingRequest":"C:\\Users\\t.berro\\Desktop\\PWAClient\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\t.berro\\Desktop\\PWAClient\\node_modules\\ng2-pdf-viewer\\ng2-pdf-viewer.es5.js","dependencies":[{"path":"C:\\Users\\t.berro\\Desktop\\PWAClient\\node_modules\\ng2-pdf-viewer\\ng2-pdf-viewer.es5.js","mtime":1519336760000},{"path":"C:\\Users\\t.berro\\Desktop\\PWAClient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1522842588765},{"path":"C:\\Users\\t.berro\\Desktop\\PWAClient\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, ElementRef, EventEmitter, HostListener, Input, NgModule, Output } from '@angular/core';\n/**\n * Created by vadimdez on 21/06/16.\n */\n/**\n * @return {?}\n */\nfunction isSSR() {\n    return typeof window === 'undefined';\n}\nif (!isSSR()) {\n    window['pdfjs-dist/build/pdf'] = require('pdfjs-dist/build/pdf');\n    require('pdfjs-dist/web/compatibility');\n    require('pdfjs-dist/web/pdf_viewer');\n    PDFJS.verbosity = ((PDFJS)).VERBOSITY_LEVELS.errors;\n}\nvar PdfViewerComponent = /*@__PURE__*/ (function () {\n    /**\n     * @param {?} element\n     */\n    function PdfViewerComponent(element) {\n        this.element = element;\n        this._renderText = true;\n        this._stickToPage = false;\n        this._originalSize = true;\n        this._page = 1;\n        this._zoom = 1;\n        this._rotation = 0;\n        this._showAll = true;\n        this._canAutoResize = true;\n        this._fitToPage = false;\n        this._externalLinkTarget = 'blank';\n        this.afterLoadComplete = new EventEmitter();\n        this.pageRendered = new EventEmitter();\n        this.onError = new EventEmitter();\n        this.onProgress = new EventEmitter();\n        this.pageChange = new EventEmitter(true);\n        if (!isSSR() && typeof PDFJS.workerSrc !== 'string') {\n            PDFJS.workerSrc = \"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/\" + PDFJS.version + \"/pdf.worker.min.js\";\n        }\n    }\n    /**\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.ngOnInit = function () {\n        if (!isSSR()) {\n            this.setupViewer();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.onPageResize = function () {\n        var _this = this;\n        if (!this._canAutoResize || !this._pdf) {\n            return;\n        }\n        if (this.resizeTimeout) {\n            clearTimeout(this.resizeTimeout);\n        }\n        this.resizeTimeout = setTimeout(function () {\n            _this.updateSize();\n        }, 100);\n    };\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.onPageRendered = function (e) {\n        this.pageRendered.emit(e);\n    };\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.ngOnChanges = function (changes) {\n        if (isSSR()) {\n            return;\n        }\n        if ('src' in changes) {\n            this.loadPDF();\n        }\n        else if (this._pdf) {\n            if ('renderText' in changes) {\n                this.setupViewer();\n            }\n            this.update();\n        }\n    };\n    Object.defineProperty(PdfViewerComponent.prototype, \"page\", {\n        /**\n         * @param {?} _page\n         * @return {?}\n         */\n        set: function (_page) {\n            _page = parseInt(_page, 10) || 1;\n            if (this._pdf) {\n                _page = this.getValidPageNumber(_page);\n            }\n            this._page = _page;\n            this.pageChange.emit(_page);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerComponent.prototype, \"renderText\", {\n        /**\n         * @param {?} renderText\n         * @return {?}\n         */\n        set: function (renderText) {\n            this._renderText = renderText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerComponent.prototype, \"originalSize\", {\n        /**\n         * @param {?} originalSize\n         * @return {?}\n         */\n        set: function (originalSize) {\n            this._originalSize = originalSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerComponent.prototype, \"showAll\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._showAll = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerComponent.prototype, \"stickToPage\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._stickToPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerComponent.prototype, \"zoom\", {\n        /**\n         * @return {?}\n         */\n        get: function () {\n            return this._zoom;\n        },\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (value <= 0) {\n                return;\n            }\n            this._zoom = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerComponent.prototype, \"rotation\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            if (!(typeof value === 'number' && value % 90 === 0)) {\n                console.warn('Invalid pages rotation angle.');\n                return;\n            }\n            this._rotation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerComponent.prototype, \"externalLinkTarget\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._externalLinkTarget = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerComponent.prototype, \"autoresize\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._canAutoResize = Boolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerComponent.prototype, \"fitToPage\", {\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        set: function (value) {\n            this._fitToPage = Boolean(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.setupViewer = function () {\n        ((PDFJS)).disableTextLayer = !this._renderText;\n        PdfViewerComponent.setExternalLinkTarget(this._externalLinkTarget);\n        this.pdfLinkService = new ((PDFJS)).PDFLinkService();\n        var /** @type {?} */ pdfOptions = {\n            container: this.element.nativeElement.querySelector('div'),\n            removePageBorders: true,\n            linkService: this.pdfLinkService\n        };\n        this.pdfViewer = new PDFJS.PDFViewer(pdfOptions);\n        this.pdfLinkService.setViewer(this.pdfViewer);\n        this.pdfFindController = new ((PDFJS)).PDFFindController({ pdfViewer: this.pdfViewer });\n        this.pdfViewer.setFindController(this.pdfFindController);\n    };\n    /**\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.updateSize = function () {\n        var _this = this;\n        if (!this._showAll) {\n            this.renderPage(this._page);\n            return;\n        }\n        this._pdf.getPage(this.pdfViewer.currentPageNumber).then(function (page) {\n            var /** @type {?} */ viewport = page.getViewport(_this._zoom, _this._rotation);\n            var /** @type {?} */ scale = _this._zoom;\n            var /** @type {?} */ stickToPage = true;\n            // Scale the document when it shouldn't be in original size or doesn't fit into the viewport\n            if (!_this._originalSize || (_this._fitToPage && viewport.width > _this.element.nativeElement.offsetWidth)) {\n                scale = _this.getScale(page.getViewport(1).width);\n                stickToPage = !_this._stickToPage;\n            }\n            _this.pdfViewer._setScale(scale, stickToPage);\n        });\n    };\n    /**\n     * @param {?} page\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.getValidPageNumber = function (page) {\n        if (page < 1) {\n            return 1;\n        }\n        if (page > this._pdf.numPages) {\n            return this._pdf.numPages;\n        }\n        return page;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PdfViewerComponent.getLinkTarget = function (type) {\n        switch (type) {\n            case 'blank':\n                return ((PDFJS)).LinkTarget.BLANK;\n            case 'none':\n                return ((PDFJS)).LinkTarget.NONE;\n            case 'self':\n                return ((PDFJS)).LinkTarget.SELF;\n            case 'parent':\n                return ((PDFJS)).LinkTarget.PARENT;\n            case 'top':\n                return ((PDFJS)).LinkTarget.TOP;\n        }\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PdfViewerComponent.setExternalLinkTarget = function (type) {\n        var /** @type {?} */ linkTarget = PdfViewerComponent.getLinkTarget(type);\n        if (linkTarget !== null) {\n            ((PDFJS)).externalLinkTarget = linkTarget;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.loadPDF = function () {\n        var _this = this;\n        if (!this.src) {\n            return;\n        }\n        if (this.lastLoaded === this.src) {\n            this.update();\n            return;\n        }\n        var /** @type {?} */ loadingTask = PDFJS.getDocument(/** @type {?} */ (this.src));\n        loadingTask.onProgress = function (progressData) {\n            _this.onProgress.emit(progressData);\n        };\n        var /** @type {?} */ src = this.src;\n        ((loadingTask.promise))\n            .then(function (pdf) {\n            _this._pdf = pdf;\n            _this.lastLoaded = src;\n            _this.afterLoadComplete.emit(pdf);\n            _this.update();\n        }, function (error) {\n            _this.onError.emit(error);\n        });\n    };\n    /**\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.update = function () {\n        if (this._showAll) {\n            this.setupViewer();\n            if (this.pdfViewer) {\n                this.pdfViewer.setDocument(this._pdf);\n            }\n        }\n        if (this.pdfLinkService) {\n            this.pdfLinkService.setDocument(this._pdf, null);\n        }\n        this.page = this._page;\n        this.render();\n    };\n    /**\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.render = function () {\n        if (this._showAll) {\n            this.renderMultiplePages();\n        }\n        else {\n            this.renderPage(this._page);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.renderMultiplePages = function () {\n        var _this = this;\n        this._page = this.getValidPageNumber(this._page);\n        if (this._rotation !== 0 || this.pdfViewer.pagesRotation !== this._rotation) {\n            setTimeout(function () {\n                _this.pdfViewer.pagesRotation = _this._rotation;\n            });\n        }\n        if (this._stickToPage) {\n            setTimeout(function () {\n                _this.pdfViewer.currentPageNumber = _this._page;\n            });\n        }\n        this.updateSize();\n    };\n    /**\n     * @param {?} pageNumber\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.renderPage = function (pageNumber) {\n        var _this = this;\n        this._pdf.getPage(pageNumber).then(function (page) {\n            var /** @type {?} */ viewport = page.getViewport(_this._zoom, _this._rotation);\n            var /** @type {?} */ container = _this.element.nativeElement.querySelector('.pdfViewer');\n            var /** @type {?} */ scale = _this._zoom;\n            // Scale the document when it shouldn't be in original size or doesn't fit into the viewport\n            if (!_this._originalSize || (_this._fitToPage && viewport.width > _this.element.nativeElement.offsetWidth)) {\n                viewport = page.getViewport(_this.element.nativeElement.offsetWidth / viewport.width, _this._rotation);\n                scale = _this.getScale(page.getViewport(1).width);\n            }\n            PdfViewerComponent.removeAllChildNodes(container);\n            ((PDFJS)).disableTextLayer = !_this._renderText;\n            var /** @type {?} */ pdfOptions = {\n                container: container,\n                removePageBorders: true,\n                defaultViewport: viewport,\n                scale: scale,\n                id: _this._page,\n            };\n            if (_this._renderText) {\n                _this.pdfLinkService = new ((PDFJS)).PDFLinkService();\n                pdfOptions.linkService = _this.pdfLinkService;\n                PdfViewerComponent.setExternalLinkTarget(_this._externalLinkTarget);\n                pdfOptions.textLayerFactory = new ((PDFJS)).DefaultTextLayerFactory();\n                pdfOptions.annotationLayerFactory = new ((PDFJS)).DefaultAnnotationLayerFactory();\n            }\n            var /** @type {?} */ pdfPageView = new ((PDFJS)).PDFPageView(pdfOptions);\n            if (_this._renderText) {\n                _this.pdfLinkService.setViewer(pdfPageView);\n            }\n            if (_this._rotation !== 0 || pdfPageView.rotation !== _this._rotation) {\n                pdfPageView.rotation = _this._rotation;\n            }\n            pdfPageView.setPdfPage(page);\n            return pdfPageView.draw();\n        });\n    };\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    PdfViewerComponent.removeAllChildNodes = function (element) {\n        while (element.firstChild) {\n            element.removeChild(element.firstChild);\n        }\n    };\n    /**\n     * @param {?} viewportWidth\n     * @return {?}\n     */\n    PdfViewerComponent.prototype.getScale = function (viewportWidth) {\n        var /** @type {?} */ offsetWidth = this.element.nativeElement.offsetWidth;\n        if (offsetWidth === 0) {\n            return 1;\n        }\n        return this._zoom * (offsetWidth / viewportWidth) / PdfViewerComponent.CSS_UNITS;\n    };\n    PdfViewerComponent.CSS_UNITS = 96.0 / 72.0;\n    return PdfViewerComponent;\n}());\n/**\n * Created by vadimdez on 01/11/2016.\n */\nvar PdfViewerModule = /*@__PURE__*/ (function () {\n    function PdfViewerModule() {\n    }\n    return PdfViewerModule;\n}());\n/**\n * Generated bundle index. Do not edit.\n */\nexport { PdfViewerModule, PdfViewerComponent };\n//# sourceMappingURL=ng2-pdf-viewer.es5.js.map\n",null]}