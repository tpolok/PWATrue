{"remainingRequest":"C:\\Users\\t.berro\\Desktop\\PWAClient\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Users\\t.berro\\Desktop\\PWAClient\\node_modules\\pdfjs-dist\\web\\pdf_viewer.js","dependencies":[{"path":"C:\\Users\\t.berro\\Desktop\\PWAClient\\node_modules\\pdfjs-dist\\web\\pdf_viewer.js","mtime":1503925561000},{"path":"C:\\Users\\t.berro\\Desktop\\PWAClient\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1522842588765},{"path":"C:\\Users\\t.berro\\Desktop\\PWAClient\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/web/pdf_viewer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/web/pdf_viewer\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/web/pdf_viewer\"] = root.pdfjsDistWebPdfViewer = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__w_pdfjs_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__w_pdfjs_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__w_pdfjs_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__w_pdfjs_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__w_pdfjs_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 14);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pdfjsLib;\nif (typeof window !== 'undefined' && window['pdfjs-dist/build/pdf']) {\n  pdfjsLib = window['pdfjs-dist/build/pdf'];\n} else {\n  pdfjsLib = require('../build/pdf.js');\n}\nmodule.exports = pdfjsLib;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.localized = exports.animationStarted = exports.normalizeWheelEventDelta = exports.binarySearchFirstItem = exports.watchScroll = exports.scrollIntoView = exports.getOutputScale = exports.approximateFraction = exports.roundToDivide = exports.getVisibleElements = exports.parseQueryString = exports.noContextMenuHandler = exports.getPDFFileNameFromURL = exports.ProgressBar = exports.EventBus = exports.NullL10n = exports.mozL10n = exports.RendererType = exports.cloneObj = exports.VERTICAL_PADDING = exports.SCROLLBAR_PADDING = exports.MAX_AUTO_SCALE = exports.UNKNOWN_SCALE = exports.MAX_SCALE = exports.MIN_SCALE = exports.DEFAULT_SCALE = exports.DEFAULT_SCALE_VALUE = exports.CSS_UNITS = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _pdfjsLib = __w_pdfjs_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar CSS_UNITS = 96.0 / 72.0;\nvar DEFAULT_SCALE_VALUE = 'auto';\nvar DEFAULT_SCALE = 1.0;\nvar MIN_SCALE = 0.25;\nvar MAX_SCALE = 10.0;\nvar UNKNOWN_SCALE = 0;\nvar MAX_AUTO_SCALE = 1.25;\nvar SCROLLBAR_PADDING = 40;\nvar VERTICAL_PADDING = 5;\nvar RendererType = {\n  CANVAS: 'canvas',\n  SVG: 'svg'\n};\nfunction formatL10nValue(text, args) {\n  if (!args) {\n    return text;\n  }\n  return text.replace(/\\{\\{\\s*(\\w+)\\s*\\}\\}/g, function (all, name) {\n    return name in args ? args[name] : '{{' + name + '}}';\n  });\n}\nvar NullL10n = {\n  get: function get(property, args, fallback) {\n    return Promise.resolve(formatL10nValue(fallback, args));\n  },\n  translate: function translate(element) {\n    return Promise.resolve();\n  }\n};\n_pdfjsLib.PDFJS.disableFullscreen = _pdfjsLib.PDFJS.disableFullscreen === undefined ? false : _pdfjsLib.PDFJS.disableFullscreen;\n_pdfjsLib.PDFJS.useOnlyCssZoom = _pdfjsLib.PDFJS.useOnlyCssZoom === undefined ? false : _pdfjsLib.PDFJS.useOnlyCssZoom;\n_pdfjsLib.PDFJS.maxCanvasPixels = _pdfjsLib.PDFJS.maxCanvasPixels === undefined ? 16777216 : _pdfjsLib.PDFJS.maxCanvasPixels;\n_pdfjsLib.PDFJS.disableHistory = _pdfjsLib.PDFJS.disableHistory === undefined ? false : _pdfjsLib.PDFJS.disableHistory;\n_pdfjsLib.PDFJS.disableTextLayer = _pdfjsLib.PDFJS.disableTextLayer === undefined ? false : _pdfjsLib.PDFJS.disableTextLayer;\n_pdfjsLib.PDFJS.ignoreCurrentPositionOnZoom = _pdfjsLib.PDFJS.ignoreCurrentPositionOnZoom === undefined ? false : _pdfjsLib.PDFJS.ignoreCurrentPositionOnZoom;\n{\n  _pdfjsLib.PDFJS.locale = _pdfjsLib.PDFJS.locale === undefined && typeof navigator !== 'undefined' ? navigator.language : _pdfjsLib.PDFJS.locale;\n}\nfunction getOutputScale(ctx) {\n  var devicePixelRatio = window.devicePixelRatio || 1;\n  var backingStoreRatio = ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1;\n  var pixelRatio = devicePixelRatio / backingStoreRatio;\n  return {\n    sx: pixelRatio,\n    sy: pixelRatio,\n    scaled: pixelRatio !== 1\n  };\n}\nfunction scrollIntoView(element, spot) {\n  var skipOverflowHiddenElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var parent = element.offsetParent;\n  if (!parent) {\n    console.error('offsetParent is not set -- cannot scroll');\n    return;\n  }\n  var offsetY = element.offsetTop + element.clientTop;\n  var offsetX = element.offsetLeft + element.clientLeft;\n  while (parent.clientHeight === parent.scrollHeight || skipOverflowHiddenElements && getComputedStyle(parent).overflow === 'hidden') {\n    if (parent.dataset._scaleY) {\n      offsetY /= parent.dataset._scaleY;\n      offsetX /= parent.dataset._scaleX;\n    }\n    offsetY += parent.offsetTop;\n    offsetX += parent.offsetLeft;\n    parent = parent.offsetParent;\n    if (!parent) {\n      return;\n    }\n  }\n  if (spot) {\n    if (spot.top !== undefined) {\n      offsetY += spot.top;\n    }\n    if (spot.left !== undefined) {\n      offsetX += spot.left;\n      parent.scrollLeft = offsetX;\n    }\n  }\n  parent.scrollTop = offsetY;\n}\nfunction watchScroll(viewAreaElement, callback) {\n  var debounceScroll = function debounceScroll(evt) {\n    if (rAF) {\n      return;\n    }\n    rAF = window.requestAnimationFrame(function viewAreaElementScrolled() {\n      rAF = null;\n      var currentY = viewAreaElement.scrollTop;\n      var lastY = state.lastY;\n      if (currentY !== lastY) {\n        state.down = currentY > lastY;\n      }\n      state.lastY = currentY;\n      callback(state);\n    });\n  };\n  var state = {\n    down: true,\n    lastY: viewAreaElement.scrollTop,\n    _eventHandler: debounceScroll\n  };\n  var rAF = null;\n  viewAreaElement.addEventListener('scroll', debounceScroll, true);\n  return state;\n}\nfunction parseQueryString(query) {\n  var parts = query.split('&');\n  var params = Object.create(null);\n  for (var i = 0, ii = parts.length; i < ii; ++i) {\n    var param = parts[i].split('=');\n    var key = param[0].toLowerCase();\n    var value = param.length > 1 ? param[1] : null;\n    params[decodeURIComponent(key)] = decodeURIComponent(value);\n  }\n  return params;\n}\nfunction binarySearchFirstItem(items, condition) {\n  var minIndex = 0;\n  var maxIndex = items.length - 1;\n  if (items.length === 0 || !condition(items[maxIndex])) {\n    return items.length;\n  }\n  if (condition(items[minIndex])) {\n    return minIndex;\n  }\n  while (minIndex < maxIndex) {\n    var currentIndex = minIndex + maxIndex >> 1;\n    var currentItem = items[currentIndex];\n    if (condition(currentItem)) {\n      maxIndex = currentIndex;\n    } else {\n      minIndex = currentIndex + 1;\n    }\n  }\n  return minIndex;\n}\nfunction approximateFraction(x) {\n  if (Math.floor(x) === x) {\n    return [x, 1];\n  }\n  var xinv = 1 / x;\n  var limit = 8;\n  if (xinv > limit) {\n    return [1, limit];\n  } else if (Math.floor(xinv) === xinv) {\n    return [1, xinv];\n  }\n  var x_ = x > 1 ? xinv : x;\n  var a = 0,\n      b = 1,\n      c = 1,\n      d = 1;\n  while (true) {\n    var p = a + c,\n        q = b + d;\n    if (q > limit) {\n      break;\n    }\n    if (x_ <= p / q) {\n      c = p;\n      d = q;\n    } else {\n      a = p;\n      b = q;\n    }\n  }\n  var result = void 0;\n  if (x_ - a / b < c / d - x_) {\n    result = x_ === x ? [a, b] : [b, a];\n  } else {\n    result = x_ === x ? [c, d] : [d, c];\n  }\n  return result;\n}\nfunction roundToDivide(x, div) {\n  var r = x % div;\n  return r === 0 ? x : Math.round(x - r + div);\n}\nfunction getVisibleElements(scrollEl, views) {\n  var sortByVisibility = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var top = scrollEl.scrollTop,\n      bottom = top + scrollEl.clientHeight;\n  var left = scrollEl.scrollLeft,\n      right = left + scrollEl.clientWidth;\n  function isElementBottomBelowViewTop(view) {\n    var element = view.div;\n    var elementBottom = element.offsetTop + element.clientTop + element.clientHeight;\n    return elementBottom > top;\n  }\n  var visible = [],\n      view = void 0,\n      element = void 0;\n  var currentHeight = void 0,\n      viewHeight = void 0,\n      hiddenHeight = void 0,\n      percentHeight = void 0;\n  var currentWidth = void 0,\n      viewWidth = void 0;\n  var firstVisibleElementInd = views.length === 0 ? 0 : binarySearchFirstItem(views, isElementBottomBelowViewTop);\n  for (var i = firstVisibleElementInd, ii = views.length; i < ii; i++) {\n    view = views[i];\n    element = view.div;\n    currentHeight = element.offsetTop + element.clientTop;\n    viewHeight = element.clientHeight;\n    if (currentHeight > bottom) {\n      break;\n    }\n    currentWidth = element.offsetLeft + element.clientLeft;\n    viewWidth = element.clientWidth;\n    if (currentWidth + viewWidth < left || currentWidth > right) {\n      continue;\n    }\n    hiddenHeight = Math.max(0, top - currentHeight) + Math.max(0, currentHeight + viewHeight - bottom);\n    percentHeight = (viewHeight - hiddenHeight) * 100 / viewHeight | 0;\n    visible.push({\n      id: view.id,\n      x: currentWidth,\n      y: currentHeight,\n      view: view,\n      percent: percentHeight\n    });\n  }\n  var first = visible[0];\n  var last = visible[visible.length - 1];\n  if (sortByVisibility) {\n    visible.sort(function (a, b) {\n      var pc = a.percent - b.percent;\n      if (Math.abs(pc) > 0.001) {\n        return -pc;\n      }\n      return a.id - b.id;\n    });\n  }\n  return {\n    first: first,\n    last: last,\n    views: visible\n  };\n}\nfunction noContextMenuHandler(evt) {\n  evt.preventDefault();\n}\nfunction isDataSchema(url) {\n  var i = 0,\n      ii = url.length;\n  while (i < ii && url[i].trim() === '') {\n    i++;\n  }\n  return url.substr(i, 5).toLowerCase() === 'data:';\n}\nfunction getPDFFileNameFromURL(url) {\n  var defaultFilename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'document.pdf';\n\n  if (isDataSchema(url)) {\n    console.warn('getPDFFileNameFromURL: ' + 'ignoring \"data:\" URL for performance reasons.');\n    return defaultFilename;\n  }\n  var reURI = /^(?:(?:[^:]+:)?\\/\\/[^\\/]+)?([^?#]*)(\\?[^#]*)?(#.*)?$/;\n  var reFilename = /[^\\/?#=]+\\.pdf\\b(?!.*\\.pdf\\b)/i;\n  var splitURI = reURI.exec(url);\n  var suggestedFilename = reFilename.exec(splitURI[1]) || reFilename.exec(splitURI[2]) || reFilename.exec(splitURI[3]);\n  if (suggestedFilename) {\n    suggestedFilename = suggestedFilename[0];\n    if (suggestedFilename.indexOf('%') !== -1) {\n      try {\n        suggestedFilename = reFilename.exec(decodeURIComponent(suggestedFilename))[0];\n      } catch (ex) {}\n    }\n  }\n  return suggestedFilename || defaultFilename;\n}\nfunction normalizeWheelEventDelta(evt) {\n  var delta = Math.sqrt(evt.deltaX * evt.deltaX + evt.deltaY * evt.deltaY);\n  var angle = Math.atan2(evt.deltaY, evt.deltaX);\n  if (-0.25 * Math.PI < angle && angle < 0.75 * Math.PI) {\n    delta = -delta;\n  }\n  var MOUSE_DOM_DELTA_PIXEL_MODE = 0;\n  var MOUSE_DOM_DELTA_LINE_MODE = 1;\n  var MOUSE_PIXELS_PER_LINE = 30;\n  var MOUSE_LINES_PER_PAGE = 30;\n  if (evt.deltaMode === MOUSE_DOM_DELTA_PIXEL_MODE) {\n    delta /= MOUSE_PIXELS_PER_LINE * MOUSE_LINES_PER_PAGE;\n  } else if (evt.deltaMode === MOUSE_DOM_DELTA_LINE_MODE) {\n    delta /= MOUSE_LINES_PER_PAGE;\n  }\n  return delta;\n}\nfunction cloneObj(obj) {\n  var result = Object.create(null);\n  for (var i in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, i)) {\n      result[i] = obj[i];\n    }\n  }\n  return result;\n}\nvar animationStarted = new Promise(function (resolve) {\n  window.requestAnimationFrame(resolve);\n});\nvar mozL10n = void 0;\nvar localized = Promise.resolve();\n\nvar EventBus = function () {\n  function EventBus() {\n    _classCallCheck(this, EventBus);\n\n    this._listeners = Object.create(null);\n  }\n\n  _createClass(EventBus, [{\n    key: 'on',\n    value: function on(eventName, listener) {\n      var eventListeners = this._listeners[eventName];\n      if (!eventListeners) {\n        eventListeners = [];\n        this._listeners[eventName] = eventListeners;\n      }\n      eventListeners.push(listener);\n    }\n  }, {\n    key: 'off',\n    value: function off(eventName, listener) {\n      var eventListeners = this._listeners[eventName];\n      var i = void 0;\n      if (!eventListeners || (i = eventListeners.indexOf(listener)) < 0) {\n        return;\n      }\n      eventListeners.splice(i, 1);\n    }\n  }, {\n    key: 'dispatch',\n    value: function dispatch(eventName) {\n      var eventListeners = this._listeners[eventName];\n      if (!eventListeners || eventListeners.length === 0) {\n        return;\n      }\n      var args = Array.prototype.slice.call(arguments, 1);\n      eventListeners.slice(0).forEach(function (listener) {\n        listener.apply(null, args);\n      });\n    }\n  }]);\n\n  return EventBus;\n}();\n\nfunction clamp(v, min, max) {\n  return Math.min(Math.max(v, min), max);\n}\n\nvar ProgressBar = function () {\n  function ProgressBar(id) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        height = _ref.height,\n        width = _ref.width,\n        units = _ref.units;\n\n    _classCallCheck(this, ProgressBar);\n\n    this.visible = true;\n    this.div = document.querySelector(id + ' .progress');\n    this.bar = this.div.parentNode;\n    this.height = height || 100;\n    this.width = width || 100;\n    this.units = units || '%';\n    this.div.style.height = this.height + this.units;\n    this.percent = 0;\n  }\n\n  _createClass(ProgressBar, [{\n    key: '_updateBar',\n    value: function _updateBar() {\n      if (this._indeterminate) {\n        this.div.classList.add('indeterminate');\n        this.div.style.width = this.width + this.units;\n        return;\n      }\n      this.div.classList.remove('indeterminate');\n      var progressSize = this.width * this._percent / 100;\n      this.div.style.width = progressSize + this.units;\n    }\n  }, {\n    key: 'setWidth',\n    value: function setWidth(viewer) {\n      if (!viewer) {\n        return;\n      }\n      var container = viewer.parentNode;\n      var scrollbarWidth = container.offsetWidth - viewer.offsetWidth;\n      if (scrollbarWidth > 0) {\n        this.bar.setAttribute('style', 'width: calc(100% - ' + scrollbarWidth + 'px);');\n      }\n    }\n  }, {\n    key: 'hide',\n    value: function hide() {\n      if (!this.visible) {\n        return;\n      }\n      this.visible = false;\n      this.bar.classList.add('hidden');\n      document.body.classList.remove('loadingInProgress');\n    }\n  }, {\n    key: 'show',\n    value: function show() {\n      if (this.visible) {\n        return;\n      }\n      this.visible = true;\n      document.body.classList.add('loadingInProgress');\n      this.bar.classList.remove('hidden');\n    }\n  }, {\n    key: 'percent',\n    get: function get() {\n      return this._percent;\n    },\n    set: function set(val) {\n      this._indeterminate = isNaN(val);\n      this._percent = clamp(val, 0, 100);\n      this._updateBar();\n    }\n  }]);\n\n  return ProgressBar;\n}();\n\nexports.CSS_UNITS = CSS_UNITS;\nexports.DEFAULT_SCALE_VALUE = DEFAULT_SCALE_VALUE;\nexports.DEFAULT_SCALE = DEFAULT_SCALE;\nexports.MIN_SCALE = MIN_SCALE;\nexports.MAX_SCALE = MAX_SCALE;\nexports.UNKNOWN_SCALE = UNKNOWN_SCALE;\nexports.MAX_AUTO_SCALE = MAX_AUTO_SCALE;\nexports.SCROLLBAR_PADDING = SCROLLBAR_PADDING;\nexports.VERTICAL_PADDING = VERTICAL_PADDING;\nexports.cloneObj = cloneObj;\nexports.RendererType = RendererType;\nexports.mozL10n = mozL10n;\nexports.NullL10n = NullL10n;\nexports.EventBus = EventBus;\nexports.ProgressBar = ProgressBar;\nexports.getPDFFileNameFromURL = getPDFFileNameFromURL;\nexports.noContextMenuHandler = noContextMenuHandler;\nexports.parseQueryString = parseQueryString;\nexports.getVisibleElements = getVisibleElements;\nexports.roundToDivide = roundToDivide;\nexports.approximateFraction = approximateFraction;\nexports.getOutputScale = getOutputScale;\nexports.scrollIntoView = scrollIntoView;\nexports.watchScroll = watchScroll;\nexports.binarySearchFirstItem = binarySearchFirstItem;\nexports.normalizeWheelEventDelta = normalizeWheelEventDelta;\nexports.animationStarted = animationStarted;\nexports.localized = localized;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getGlobalEventBus = exports.attachDOMEventsToEventBus = undefined;\n\nvar _ui_utils = __w_pdfjs_require__(1);\n\nfunction attachDOMEventsToEventBus(eventBus) {\n  eventBus.on('documentload', function () {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('documentload', true, true, {});\n    window.dispatchEvent(event);\n  });\n  eventBus.on('pagerendered', function (evt) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('pagerendered', true, true, {\n      pageNumber: evt.pageNumber,\n      cssTransform: evt.cssTransform\n    });\n    evt.source.div.dispatchEvent(event);\n  });\n  eventBus.on('textlayerrendered', function (evt) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('textlayerrendered', true, true, { pageNumber: evt.pageNumber });\n    evt.source.textLayerDiv.dispatchEvent(event);\n  });\n  eventBus.on('pagechange', function (evt) {\n    var event = document.createEvent('UIEvents');\n    event.initUIEvent('pagechange', true, true, window, 0);\n    event.pageNumber = evt.pageNumber;\n    evt.source.container.dispatchEvent(event);\n  });\n  eventBus.on('pagesinit', function (evt) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('pagesinit', true, true, null);\n    evt.source.container.dispatchEvent(event);\n  });\n  eventBus.on('pagesloaded', function (evt) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('pagesloaded', true, true, { pagesCount: evt.pagesCount });\n    evt.source.container.dispatchEvent(event);\n  });\n  eventBus.on('scalechange', function (evt) {\n    var event = document.createEvent('UIEvents');\n    event.initUIEvent('scalechange', true, true, window, 0);\n    event.scale = evt.scale;\n    event.presetValue = evt.presetValue;\n    evt.source.container.dispatchEvent(event);\n  });\n  eventBus.on('updateviewarea', function (evt) {\n    var event = document.createEvent('UIEvents');\n    event.initUIEvent('updateviewarea', true, true, window, 0);\n    event.location = evt.location;\n    evt.source.container.dispatchEvent(event);\n  });\n  eventBus.on('find', function (evt) {\n    if (evt.source === window) {\n      return;\n    }\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('find' + evt.type, true, true, {\n      query: evt.query,\n      phraseSearch: evt.phraseSearch,\n      caseSensitive: evt.caseSensitive,\n      highlightAll: evt.highlightAll,\n      findPrevious: evt.findPrevious\n    });\n    window.dispatchEvent(event);\n  });\n  eventBus.on('attachmentsloaded', function (evt) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('attachmentsloaded', true, true, { attachmentsCount: evt.attachmentsCount });\n    evt.source.container.dispatchEvent(event);\n  });\n  eventBus.on('sidebarviewchanged', function (evt) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('sidebarviewchanged', true, true, { view: evt.view });\n    evt.source.outerContainer.dispatchEvent(event);\n  });\n  eventBus.on('pagemode', function (evt) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('pagemode', true, true, { mode: evt.mode });\n    evt.source.pdfViewer.container.dispatchEvent(event);\n  });\n  eventBus.on('namedaction', function (evt) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('namedaction', true, true, { action: evt.action });\n    evt.source.pdfViewer.container.dispatchEvent(event);\n  });\n  eventBus.on('presentationmodechanged', function (evt) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('presentationmodechanged', true, true, {\n      active: evt.active,\n      switchInProgress: evt.switchInProgress\n    });\n    window.dispatchEvent(event);\n  });\n  eventBus.on('outlineloaded', function (evt) {\n    var event = document.createEvent('CustomEvent');\n    event.initCustomEvent('outlineloaded', true, true, { outlineCount: evt.outlineCount });\n    evt.source.container.dispatchEvent(event);\n  });\n}\nvar globalEventBus = null;\nfunction getGlobalEventBus() {\n  if (globalEventBus) {\n    return globalEventBus;\n  }\n  globalEventBus = new _ui_utils.EventBus();\n  attachDOMEventsToEventBus(globalEventBus);\n  return globalEventBus;\n}\nexports.attachDOMEventsToEventBus = attachDOMEventsToEventBus;\nexports.getGlobalEventBus = getGlobalEventBus;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SimpleLinkService = exports.PDFLinkService = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dom_events = __w_pdfjs_require__(2);\n\nvar _ui_utils = __w_pdfjs_require__(1);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PDFLinkService = function () {\n  function PDFLinkService() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        eventBus = _ref.eventBus;\n\n    _classCallCheck(this, PDFLinkService);\n\n    this.eventBus = eventBus || (0, _dom_events.getGlobalEventBus)();\n    this.baseUrl = null;\n    this.pdfDocument = null;\n    this.pdfViewer = null;\n    this.pdfHistory = null;\n    this._pagesRefCache = null;\n  }\n\n  _createClass(PDFLinkService, [{\n    key: 'setDocument',\n    value: function setDocument(pdfDocument, baseUrl) {\n      this.baseUrl = baseUrl;\n      this.pdfDocument = pdfDocument;\n      this._pagesRefCache = Object.create(null);\n    }\n  }, {\n    key: 'setViewer',\n    value: function setViewer(pdfViewer) {\n      this.pdfViewer = pdfViewer;\n    }\n  }, {\n    key: 'setHistory',\n    value: function setHistory(pdfHistory) {\n      this.pdfHistory = pdfHistory;\n    }\n  }, {\n    key: 'navigateTo',\n    value: function navigateTo(dest) {\n      var _this = this;\n\n      var goToDestination = function goToDestination(_ref2) {\n        var namedDest = _ref2.namedDest,\n            explicitDest = _ref2.explicitDest;\n\n        var destRef = explicitDest[0],\n            pageNumber = void 0;\n        if (destRef instanceof Object) {\n          pageNumber = _this._cachedPageNumber(destRef);\n          if (pageNumber === null) {\n            _this.pdfDocument.getPageIndex(destRef).then(function (pageIndex) {\n              _this.cachePageRef(pageIndex + 1, destRef);\n              goToDestination({\n                namedDest: namedDest,\n                explicitDest: explicitDest\n              });\n            }).catch(function () {\n              console.error('PDFLinkService.navigateTo: \"' + destRef + '\" is not ' + ('a valid page reference, for dest=\"' + dest + '\".'));\n            });\n            return;\n          }\n        } else if ((destRef | 0) === destRef) {\n          pageNumber = destRef + 1;\n        } else {\n          console.error('PDFLinkService.navigateTo: \"' + destRef + '\" is not ' + ('a valid destination reference, for dest=\"' + dest + '\".'));\n          return;\n        }\n        if (!pageNumber || pageNumber < 1 || pageNumber > _this.pagesCount) {\n          console.error('PDFLinkService.navigateTo: \"' + pageNumber + '\" is not ' + ('a valid page number, for dest=\"' + dest + '\".'));\n          return;\n        }\n        _this.pdfViewer.scrollPageIntoView({\n          pageNumber: pageNumber,\n          destArray: explicitDest\n        });\n        if (_this.pdfHistory) {\n          _this.pdfHistory.push({\n            dest: explicitDest,\n            hash: namedDest,\n            page: pageNumber\n          });\n        }\n      };\n      new Promise(function (resolve, reject) {\n        if (typeof dest === 'string') {\n          _this.pdfDocument.getDestination(dest).then(function (destArray) {\n            resolve({\n              namedDest: dest,\n              explicitDest: destArray\n            });\n          });\n          return;\n        }\n        resolve({\n          namedDest: '',\n          explicitDest: dest\n        });\n      }).then(function (data) {\n        if (!(data.explicitDest instanceof Array)) {\n          console.error('PDFLinkService.navigateTo: \"' + data.explicitDest + '\" is' + (' not a valid destination array, for dest=\"' + dest + '\".'));\n          return;\n        }\n        goToDestination(data);\n      });\n    }\n  }, {\n    key: 'getDestinationHash',\n    value: function getDestinationHash(dest) {\n      if (typeof dest === 'string') {\n        return this.getAnchorUrl('#' + escape(dest));\n      }\n      if (dest instanceof Array) {\n        var str = JSON.stringify(dest);\n        return this.getAnchorUrl('#' + escape(str));\n      }\n      return this.getAnchorUrl('');\n    }\n  }, {\n    key: 'getAnchorUrl',\n    value: function getAnchorUrl(anchor) {\n      return (this.baseUrl || '') + anchor;\n    }\n  }, {\n    key: 'setHash',\n    value: function setHash(hash) {\n      var pageNumber = void 0,\n          dest = void 0;\n      if (hash.indexOf('=') >= 0) {\n        var params = (0, _ui_utils.parseQueryString)(hash);\n        if ('search' in params) {\n          this.eventBus.dispatch('findfromurlhash', {\n            source: this,\n            query: params['search'].replace(/\"/g, ''),\n            phraseSearch: params['phrase'] === 'true'\n          });\n        }\n        if ('nameddest' in params) {\n          if (this.pdfHistory) {\n            this.pdfHistory.updateNextHashParam(params.nameddest);\n          }\n          this.navigateTo(params.nameddest);\n          return;\n        }\n        if ('page' in params) {\n          pageNumber = params.page | 0 || 1;\n        }\n        if ('zoom' in params) {\n          var zoomArgs = params.zoom.split(',');\n          var zoomArg = zoomArgs[0];\n          var zoomArgNumber = parseFloat(zoomArg);\n          if (zoomArg.indexOf('Fit') === -1) {\n            dest = [null, { name: 'XYZ' }, zoomArgs.length > 1 ? zoomArgs[1] | 0 : null, zoomArgs.length > 2 ? zoomArgs[2] | 0 : null, zoomArgNumber ? zoomArgNumber / 100 : zoomArg];\n          } else {\n            if (zoomArg === 'Fit' || zoomArg === 'FitB') {\n              dest = [null, { name: zoomArg }];\n            } else if (zoomArg === 'FitH' || zoomArg === 'FitBH' || zoomArg === 'FitV' || zoomArg === 'FitBV') {\n              dest = [null, { name: zoomArg }, zoomArgs.length > 1 ? zoomArgs[1] | 0 : null];\n            } else if (zoomArg === 'FitR') {\n              if (zoomArgs.length !== 5) {\n                console.error('PDFLinkService.setHash: Not enough parameters for \"FitR\".');\n              } else {\n                dest = [null, { name: zoomArg }, zoomArgs[1] | 0, zoomArgs[2] | 0, zoomArgs[3] | 0, zoomArgs[4] | 0];\n              }\n            } else {\n              console.error('PDFLinkService.setHash: \"' + zoomArg + '\" is not ' + 'a valid zoom value.');\n            }\n          }\n        }\n        if (dest) {\n          this.pdfViewer.scrollPageIntoView({\n            pageNumber: pageNumber || this.page,\n            destArray: dest,\n            allowNegativeOffset: true\n          });\n        } else if (pageNumber) {\n          this.page = pageNumber;\n        }\n        if ('pagemode' in params) {\n          this.eventBus.dispatch('pagemode', {\n            source: this,\n            mode: params.pagemode\n          });\n        }\n      } else {\n        if (/^\\d+$/.test(hash) && hash <= this.pagesCount) {\n          console.warn('PDFLinkService_setHash: specifying a page number ' + 'directly after the hash symbol (#) is deprecated, ' + ('please use the \"#page=' + hash + '\" form instead.'));\n          this.page = hash | 0;\n        }\n        dest = unescape(hash);\n        try {\n          dest = JSON.parse(dest);\n          if (!(dest instanceof Array)) {\n            dest = dest.toString();\n          }\n        } catch (ex) {}\n        if (typeof dest === 'string' || isValidExplicitDestination(dest)) {\n          if (this.pdfHistory) {\n            this.pdfHistory.updateNextHashParam(dest);\n          }\n          this.navigateTo(dest);\n          return;\n        }\n        console.error('PDFLinkService.setHash: \"' + unescape(hash) + '\" is not ' + 'a valid destination.');\n      }\n    }\n  }, {\n    key: 'executeNamedAction',\n    value: function executeNamedAction(action) {\n      switch (action) {\n        case 'GoBack':\n          if (this.pdfHistory) {\n            this.pdfHistory.back();\n          }\n          break;\n        case 'GoForward':\n          if (this.pdfHistory) {\n            this.pdfHistory.forward();\n          }\n          break;\n        case 'NextPage':\n          if (this.page < this.pagesCount) {\n            this.page++;\n          }\n          break;\n        case 'PrevPage':\n          if (this.page > 1) {\n            this.page--;\n          }\n          break;\n        case 'LastPage':\n          this.page = this.pagesCount;\n          break;\n        case 'FirstPage':\n          this.page = 1;\n          break;\n        default:\n          break;\n      }\n      this.eventBus.dispatch('namedaction', {\n        source: this,\n        action: action\n      });\n    }\n  }, {\n    key: 'onFileAttachmentAnnotation',\n    value: function onFileAttachmentAnnotation(_ref3) {\n      var id = _ref3.id,\n          filename = _ref3.filename,\n          content = _ref3.content;\n\n      this.eventBus.dispatch('fileattachmentannotation', {\n        source: this,\n        id: id,\n        filename: filename,\n        content: content\n      });\n    }\n  }, {\n    key: 'cachePageRef',\n    value: function cachePageRef(pageNum, pageRef) {\n      var refStr = pageRef.num + ' ' + pageRef.gen + ' R';\n      this._pagesRefCache[refStr] = pageNum;\n    }\n  }, {\n    key: '_cachedPageNumber',\n    value: function _cachedPageNumber(pageRef) {\n      var refStr = pageRef.num + ' ' + pageRef.gen + ' R';\n      return this._pagesRefCache && this._pagesRefCache[refStr] || null;\n    }\n  }, {\n    key: 'pagesCount',\n    get: function get() {\n      return this.pdfDocument ? this.pdfDocument.numPages : 0;\n    }\n  }, {\n    key: 'page',\n    get: function get() {\n      return this.pdfViewer.currentPageNumber;\n    },\n    set: function set(value) {\n      this.pdfViewer.currentPageNumber = value;\n    }\n  }]);\n\n  return PDFLinkService;\n}();\n\nfunction isValidExplicitDestination(dest) {\n  if (!(dest instanceof Array)) {\n    return false;\n  }\n  var destLength = dest.length,\n      allowNull = true;\n  if (destLength < 2) {\n    return false;\n  }\n  var page = dest[0];\n  if (!((typeof page === 'undefined' ? 'undefined' : _typeof(page)) === 'object' && typeof page.num === 'number' && (page.num | 0) === page.num && typeof page.gen === 'number' && (page.gen | 0) === page.gen) && !(typeof page === 'number' && (page | 0) === page && page >= 0)) {\n    return false;\n  }\n  var zoom = dest[1];\n  if (!((typeof zoom === 'undefined' ? 'undefined' : _typeof(zoom)) === 'object' && typeof zoom.name === 'string')) {\n    return false;\n  }\n  switch (zoom.name) {\n    case 'XYZ':\n      if (destLength !== 5) {\n        return false;\n      }\n      break;\n    case 'Fit':\n    case 'FitB':\n      return destLength === 2;\n    case 'FitH':\n    case 'FitBH':\n    case 'FitV':\n    case 'FitBV':\n      if (destLength !== 3) {\n        return false;\n      }\n      break;\n    case 'FitR':\n      if (destLength !== 6) {\n        return false;\n      }\n      allowNull = false;\n      break;\n    default:\n      return false;\n  }\n  for (var i = 2; i < destLength; i++) {\n    var param = dest[i];\n    if (!(typeof param === 'number' || allowNull && param === null)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nvar SimpleLinkService = function () {\n  function SimpleLinkService() {\n    _classCallCheck(this, SimpleLinkService);\n  }\n\n  _createClass(SimpleLinkService, [{\n    key: 'navigateTo',\n    value: function navigateTo(dest) {}\n  }, {\n    key: 'getDestinationHash',\n    value: function getDestinationHash(dest) {\n      return '#';\n    }\n  }, {\n    key: 'getAnchorUrl',\n    value: function getAnchorUrl(hash) {\n      return '#';\n    }\n  }, {\n    key: 'setHash',\n    value: function setHash(hash) {}\n  }, {\n    key: 'executeNamedAction',\n    value: function executeNamedAction(action) {}\n  }, {\n    key: 'onFileAttachmentAnnotation',\n    value: function onFileAttachmentAnnotation(_ref4) {\n      var id = _ref4.id,\n          filename = _ref4.filename,\n          content = _ref4.content;\n    }\n  }, {\n    key: 'cachePageRef',\n    value: function cachePageRef(pageNum, pageRef) {}\n  }, {\n    key: 'page',\n    get: function get() {\n      return 0;\n    },\n    set: function set(value) {}\n  }]);\n\n  return SimpleLinkService;\n}();\n\nexports.PDFLinkService = PDFLinkService;\nexports.SimpleLinkService = SimpleLinkService;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultAnnotationLayerFactory = exports.AnnotationLayerBuilder = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _pdfjsLib = __w_pdfjs_require__(0);\n\nvar _ui_utils = __w_pdfjs_require__(1);\n\nvar _pdf_link_service = __w_pdfjs_require__(3);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationLayerBuilder = function () {\n  function AnnotationLayerBuilder(_ref) {\n    var pageDiv = _ref.pageDiv,\n        pdfPage = _ref.pdfPage,\n        linkService = _ref.linkService,\n        downloadManager = _ref.downloadManager,\n        _ref$renderInteractiv = _ref.renderInteractiveForms,\n        renderInteractiveForms = _ref$renderInteractiv === undefined ? false : _ref$renderInteractiv,\n        _ref$l10n = _ref.l10n,\n        l10n = _ref$l10n === undefined ? _ui_utils.NullL10n : _ref$l10n;\n\n    _classCallCheck(this, AnnotationLayerBuilder);\n\n    this.pageDiv = pageDiv;\n    this.pdfPage = pdfPage;\n    this.linkService = linkService;\n    this.downloadManager = downloadManager;\n    this.renderInteractiveForms = renderInteractiveForms;\n    this.l10n = l10n;\n    this.div = null;\n  }\n\n  _createClass(AnnotationLayerBuilder, [{\n    key: 'render',\n    value: function render(viewport) {\n      var _this = this;\n\n      var intent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'display';\n\n      this.pdfPage.getAnnotations({ intent: intent }).then(function (annotations) {\n        var parameters = {\n          viewport: viewport.clone({ dontFlip: true }),\n          div: _this.div,\n          annotations: annotations,\n          page: _this.pdfPage,\n          renderInteractiveForms: _this.renderInteractiveForms,\n          linkService: _this.linkService,\n          downloadManager: _this.downloadManager\n        };\n        if (_this.div) {\n          _pdfjsLib.AnnotationLayer.update(parameters);\n        } else {\n          if (annotations.length === 0) {\n            return;\n          }\n          _this.div = document.createElement('div');\n          _this.div.className = 'annotationLayer';\n          _this.pageDiv.appendChild(_this.div);\n          parameters.div = _this.div;\n          _pdfjsLib.AnnotationLayer.render(parameters);\n          _this.l10n.translate(_this.div);\n        }\n      });\n    }\n  }, {\n    key: 'hide',\n    value: function hide() {\n      if (!this.div) {\n        return;\n      }\n      this.div.setAttribute('hidden', 'true');\n    }\n  }]);\n\n  return AnnotationLayerBuilder;\n}();\n\nvar DefaultAnnotationLayerFactory = function () {\n  function DefaultAnnotationLayerFactory() {\n    _classCallCheck(this, DefaultAnnotationLayerFactory);\n  }\n\n  _createClass(DefaultAnnotationLayerFactory, [{\n    key: 'createAnnotationLayerBuilder',\n    value: function createAnnotationLayerBuilder(pageDiv, pdfPage) {\n      var renderInteractiveForms = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var l10n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _ui_utils.NullL10n;\n\n      return new AnnotationLayerBuilder({\n        pageDiv: pageDiv,\n        pdfPage: pdfPage,\n        renderInteractiveForms: renderInteractiveForms,\n        linkService: new _pdf_link_service.SimpleLinkService(),\n        l10n: l10n\n      });\n    }\n  }]);\n\n  return DefaultAnnotationLayerFactory;\n}();\n\nexports.AnnotationLayerBuilder = AnnotationLayerBuilder;\nexports.DefaultAnnotationLayerFactory = DefaultAnnotationLayerFactory;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFPageView = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ui_utils = __w_pdfjs_require__(1);\n\nvar _pdfjsLib = __w_pdfjs_require__(0);\n\nvar _dom_events = __w_pdfjs_require__(2);\n\nvar _pdf_rendering_queue = __w_pdfjs_require__(7);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PDFPageView = function () {\n  function PDFPageView(options) {\n    _classCallCheck(this, PDFPageView);\n\n    var container = options.container;\n    var defaultViewport = options.defaultViewport;\n    this.id = options.id;\n    this.renderingId = 'page' + this.id;\n    this.pdfPage = null;\n    this.pageLabel = null;\n    this.rotation = 0;\n    this.scale = options.scale || _ui_utils.DEFAULT_SCALE;\n    this.viewport = defaultViewport;\n    this.pdfPageRotate = defaultViewport.rotation;\n    this.hasRestrictedScaling = false;\n    this.enhanceTextSelection = options.enhanceTextSelection || false;\n    this.renderInteractiveForms = options.renderInteractiveForms || false;\n    this.eventBus = options.eventBus || (0, _dom_events.getGlobalEventBus)();\n    this.renderingQueue = options.renderingQueue;\n    this.textLayerFactory = options.textLayerFactory;\n    this.annotationLayerFactory = options.annotationLayerFactory;\n    this.renderer = options.renderer || _ui_utils.RendererType.CANVAS;\n    this.l10n = options.l10n || _ui_utils.NullL10n;\n    this.paintTask = null;\n    this.paintedViewportMap = new WeakMap();\n    this.renderingState = _pdf_rendering_queue.RenderingStates.INITIAL;\n    this.resume = null;\n    this.error = null;\n    this.onBeforeDraw = null;\n    this.onAfterDraw = null;\n    this.annotationLayer = null;\n    this.textLayer = null;\n    this.zoomLayer = null;\n    var div = document.createElement('div');\n    div.className = 'page';\n    div.style.width = Math.floor(this.viewport.width) + 'px';\n    div.style.height = Math.floor(this.viewport.height) + 'px';\n    div.setAttribute('data-page-number', this.id);\n    this.div = div;\n    container.appendChild(div);\n  }\n\n  _createClass(PDFPageView, [{\n    key: 'setPdfPage',\n    value: function setPdfPage(pdfPage) {\n      this.pdfPage = pdfPage;\n      this.pdfPageRotate = pdfPage.rotate;\n      var totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n      this.viewport = pdfPage.getViewport(this.scale * _ui_utils.CSS_UNITS, totalRotation);\n      this.stats = pdfPage.stats;\n      this.reset();\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this.reset();\n      if (this.pdfPage) {\n        this.pdfPage.cleanup();\n        this.pdfPage = null;\n      }\n    }\n  }, {\n    key: '_resetZoomLayer',\n    value: function _resetZoomLayer() {\n      var removeFromDOM = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (!this.zoomLayer) {\n        return;\n      }\n      var zoomLayerCanvas = this.zoomLayer.firstChild;\n      this.paintedViewportMap.delete(zoomLayerCanvas);\n      zoomLayerCanvas.width = 0;\n      zoomLayerCanvas.height = 0;\n      if (removeFromDOM) {\n        this.zoomLayer.remove();\n      }\n      this.zoomLayer = null;\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      var keepZoomLayer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var keepAnnotations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      this.cancelRendering();\n      var div = this.div;\n      div.style.width = Math.floor(this.viewport.width) + 'px';\n      div.style.height = Math.floor(this.viewport.height) + 'px';\n      var childNodes = div.childNodes;\n      var currentZoomLayerNode = keepZoomLayer && this.zoomLayer || null;\n      var currentAnnotationNode = keepAnnotations && this.annotationLayer && this.annotationLayer.div || null;\n      for (var i = childNodes.length - 1; i >= 0; i--) {\n        var node = childNodes[i];\n        if (currentZoomLayerNode === node || currentAnnotationNode === node) {\n          continue;\n        }\n        div.removeChild(node);\n      }\n      div.removeAttribute('data-loaded');\n      if (currentAnnotationNode) {\n        this.annotationLayer.hide();\n      } else {\n        this.annotationLayer = null;\n      }\n      if (!currentZoomLayerNode) {\n        if (this.canvas) {\n          this.paintedViewportMap.delete(this.canvas);\n          this.canvas.width = 0;\n          this.canvas.height = 0;\n          delete this.canvas;\n        }\n        this._resetZoomLayer();\n      }\n      if (this.svg) {\n        this.paintedViewportMap.delete(this.svg);\n        delete this.svg;\n      }\n      this.loadingIconDiv = document.createElement('div');\n      this.loadingIconDiv.className = 'loadingIcon';\n      div.appendChild(this.loadingIconDiv);\n    }\n  }, {\n    key: 'update',\n    value: function update(scale, rotation) {\n      this.scale = scale || this.scale;\n      if (typeof rotation !== 'undefined') {\n        this.rotation = rotation;\n      }\n      var totalRotation = (this.rotation + this.pdfPageRotate) % 360;\n      this.viewport = this.viewport.clone({\n        scale: this.scale * _ui_utils.CSS_UNITS,\n        rotation: totalRotation\n      });\n      if (this.svg) {\n        this.cssTransform(this.svg, true);\n        this.eventBus.dispatch('pagerendered', {\n          source: this,\n          pageNumber: this.id,\n          cssTransform: true\n        });\n        return;\n      }\n      var isScalingRestricted = false;\n      if (this.canvas && _pdfjsLib.PDFJS.maxCanvasPixels > 0) {\n        var outputScale = this.outputScale;\n        if ((Math.floor(this.viewport.width) * outputScale.sx | 0) * (Math.floor(this.viewport.height) * outputScale.sy | 0) > _pdfjsLib.PDFJS.maxCanvasPixels) {\n          isScalingRestricted = true;\n        }\n      }\n      if (this.canvas) {\n        if (_pdfjsLib.PDFJS.useOnlyCssZoom || this.hasRestrictedScaling && isScalingRestricted) {\n          this.cssTransform(this.canvas, true);\n          this.eventBus.dispatch('pagerendered', {\n            source: this,\n            pageNumber: this.id,\n            cssTransform: true\n          });\n          return;\n        }\n        if (!this.zoomLayer && !this.canvas.hasAttribute('hidden')) {\n          this.zoomLayer = this.canvas.parentNode;\n          this.zoomLayer.style.position = 'absolute';\n        }\n      }\n      if (this.zoomLayer) {\n        this.cssTransform(this.zoomLayer.firstChild);\n      }\n      this.reset(true, true);\n    }\n  }, {\n    key: 'cancelRendering',\n    value: function cancelRendering() {\n      if (this.paintTask) {\n        this.paintTask.cancel();\n        this.paintTask = null;\n      }\n      this.renderingState = _pdf_rendering_queue.RenderingStates.INITIAL;\n      this.resume = null;\n      if (this.textLayer) {\n        this.textLayer.cancel();\n        this.textLayer = null;\n      }\n    }\n  }, {\n    key: 'cssTransform',\n    value: function cssTransform(target) {\n      var redrawAnnotations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var width = this.viewport.width;\n      var height = this.viewport.height;\n      var div = this.div;\n      target.style.width = target.parentNode.style.width = div.style.width = Math.floor(width) + 'px';\n      target.style.height = target.parentNode.style.height = div.style.height = Math.floor(height) + 'px';\n      var relativeRotation = this.viewport.rotation - this.paintedViewportMap.get(target).rotation;\n      var absRotation = Math.abs(relativeRotation);\n      var scaleX = 1,\n          scaleY = 1;\n      if (absRotation === 90 || absRotation === 270) {\n        scaleX = height / width;\n        scaleY = width / height;\n      }\n      var cssTransform = 'rotate(' + relativeRotation + 'deg) ' + 'scale(' + scaleX + ',' + scaleY + ')';\n      _pdfjsLib.CustomStyle.setProp('transform', target, cssTransform);\n      if (this.textLayer) {\n        var textLayerViewport = this.textLayer.viewport;\n        var textRelativeRotation = this.viewport.rotation - textLayerViewport.rotation;\n        var textAbsRotation = Math.abs(textRelativeRotation);\n        var scale = width / textLayerViewport.width;\n        if (textAbsRotation === 90 || textAbsRotation === 270) {\n          scale = width / textLayerViewport.height;\n        }\n        var textLayerDiv = this.textLayer.textLayerDiv;\n        var transX = void 0,\n            transY = void 0;\n        switch (textAbsRotation) {\n          case 0:\n            transX = transY = 0;\n            break;\n          case 90:\n            transX = 0;\n            transY = '-' + textLayerDiv.style.height;\n            break;\n          case 180:\n            transX = '-' + textLayerDiv.style.width;\n            transY = '-' + textLayerDiv.style.height;\n            break;\n          case 270:\n            transX = '-' + textLayerDiv.style.width;\n            transY = 0;\n            break;\n          default:\n            console.error('Bad rotation value.');\n            break;\n        }\n        _pdfjsLib.CustomStyle.setProp('transform', textLayerDiv, 'rotate(' + textAbsRotation + 'deg) ' + 'scale(' + scale + ', ' + scale + ') ' + 'translate(' + transX + ', ' + transY + ')');\n        _pdfjsLib.CustomStyle.setProp('transformOrigin', textLayerDiv, '0% 0%');\n      }\n      if (redrawAnnotations && this.annotationLayer) {\n        this.annotationLayer.render(this.viewport, 'display');\n      }\n    }\n  }, {\n    key: 'getPagePoint',\n    value: function getPagePoint(x, y) {\n      return this.viewport.convertToPdfPoint(x, y);\n    }\n  }, {\n    key: 'draw',\n    value: function draw() {\n      var _this = this;\n\n      if (this.renderingState !== _pdf_rendering_queue.RenderingStates.INITIAL) {\n        console.error('Must be in new state before drawing');\n        this.reset();\n      }\n      if (!this.pdfPage) {\n        this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n        return Promise.reject(new Error('Page is not loaded'));\n      }\n      this.renderingState = _pdf_rendering_queue.RenderingStates.RUNNING;\n      var pdfPage = this.pdfPage;\n      var div = this.div;\n      var canvasWrapper = document.createElement('div');\n      canvasWrapper.style.width = div.style.width;\n      canvasWrapper.style.height = div.style.height;\n      canvasWrapper.classList.add('canvasWrapper');\n      if (this.annotationLayer && this.annotationLayer.div) {\n        div.insertBefore(canvasWrapper, this.annotationLayer.div);\n      } else {\n        div.appendChild(canvasWrapper);\n      }\n      var textLayer = null;\n      if (this.textLayerFactory) {\n        var textLayerDiv = document.createElement('div');\n        textLayerDiv.className = 'textLayer';\n        textLayerDiv.style.width = canvasWrapper.style.width;\n        textLayerDiv.style.height = canvasWrapper.style.height;\n        if (this.annotationLayer && this.annotationLayer.div) {\n          div.insertBefore(textLayerDiv, this.annotationLayer.div);\n        } else {\n          div.appendChild(textLayerDiv);\n        }\n        textLayer = this.textLayerFactory.createTextLayerBuilder(textLayerDiv, this.id - 1, this.viewport, this.enhanceTextSelection);\n      }\n      this.textLayer = textLayer;\n      var renderContinueCallback = null;\n      if (this.renderingQueue) {\n        renderContinueCallback = function renderContinueCallback(cont) {\n          if (!_this.renderingQueue.isHighestPriority(_this)) {\n            _this.renderingState = _pdf_rendering_queue.RenderingStates.PAUSED;\n            _this.resume = function () {\n              _this.renderingState = _pdf_rendering_queue.RenderingStates.RUNNING;\n              cont();\n            };\n            return;\n          }\n          cont();\n        };\n      }\n      var finishPaintTask = function finishPaintTask(error) {\n        if (paintTask === _this.paintTask) {\n          _this.paintTask = null;\n        }\n        if (error === 'cancelled' || error instanceof _pdfjsLib.RenderingCancelledException) {\n          _this.error = null;\n          return Promise.resolve(undefined);\n        }\n        _this.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n        if (_this.loadingIconDiv) {\n          div.removeChild(_this.loadingIconDiv);\n          delete _this.loadingIconDiv;\n        }\n        _this._resetZoomLayer(true);\n        _this.error = error;\n        _this.stats = pdfPage.stats;\n        if (_this.onAfterDraw) {\n          _this.onAfterDraw();\n        }\n        _this.eventBus.dispatch('pagerendered', {\n          source: _this,\n          pageNumber: _this.id,\n          cssTransform: false\n        });\n        if (error) {\n          return Promise.reject(error);\n        }\n        return Promise.resolve(undefined);\n      };\n      var paintTask = this.renderer === _ui_utils.RendererType.SVG ? this.paintOnSvg(canvasWrapper) : this.paintOnCanvas(canvasWrapper);\n      paintTask.onRenderContinue = renderContinueCallback;\n      this.paintTask = paintTask;\n      var resultPromise = paintTask.promise.then(function () {\n        return finishPaintTask(null).then(function () {\n          if (textLayer) {\n            var readableStream = pdfPage.streamTextContent({ normalizeWhitespace: true });\n            textLayer.setTextContentStream(readableStream);\n            textLayer.render();\n          }\n        });\n      }, function (reason) {\n        return finishPaintTask(reason);\n      });\n      if (this.annotationLayerFactory) {\n        if (!this.annotationLayer) {\n          this.annotationLayer = this.annotationLayerFactory.createAnnotationLayerBuilder(div, pdfPage, this.renderInteractiveForms, this.l10n);\n        }\n        this.annotationLayer.render(this.viewport, 'display');\n      }\n      div.setAttribute('data-loaded', true);\n      if (this.onBeforeDraw) {\n        this.onBeforeDraw();\n      }\n      return resultPromise;\n    }\n  }, {\n    key: 'paintOnCanvas',\n    value: function paintOnCanvas(canvasWrapper) {\n      var renderCapability = (0, _pdfjsLib.createPromiseCapability)();\n      var result = {\n        promise: renderCapability.promise,\n        onRenderContinue: function onRenderContinue(cont) {\n          cont();\n        },\n        cancel: function cancel() {\n          renderTask.cancel();\n        }\n      };\n      var viewport = this.viewport;\n      var canvas = document.createElement('canvas');\n      canvas.id = this.renderingId;\n      canvas.setAttribute('hidden', 'hidden');\n      var isCanvasHidden = true;\n      var showCanvas = function showCanvas() {\n        if (isCanvasHidden) {\n          canvas.removeAttribute('hidden');\n          isCanvasHidden = false;\n        }\n      };\n      canvasWrapper.appendChild(canvas);\n      this.canvas = canvas;\n      canvas.mozOpaque = true;\n      var ctx = canvas.getContext('2d', { alpha: false });\n      var outputScale = (0, _ui_utils.getOutputScale)(ctx);\n      this.outputScale = outputScale;\n      if (_pdfjsLib.PDFJS.useOnlyCssZoom) {\n        var actualSizeViewport = viewport.clone({ scale: _ui_utils.CSS_UNITS });\n        outputScale.sx *= actualSizeViewport.width / viewport.width;\n        outputScale.sy *= actualSizeViewport.height / viewport.height;\n        outputScale.scaled = true;\n      }\n      if (_pdfjsLib.PDFJS.maxCanvasPixels > 0) {\n        var pixelsInViewport = viewport.width * viewport.height;\n        var maxScale = Math.sqrt(_pdfjsLib.PDFJS.maxCanvasPixels / pixelsInViewport);\n        if (outputScale.sx > maxScale || outputScale.sy > maxScale) {\n          outputScale.sx = maxScale;\n          outputScale.sy = maxScale;\n          outputScale.scaled = true;\n          this.hasRestrictedScaling = true;\n        } else {\n          this.hasRestrictedScaling = false;\n        }\n      }\n      var sfx = (0, _ui_utils.approximateFraction)(outputScale.sx);\n      var sfy = (0, _ui_utils.approximateFraction)(outputScale.sy);\n      canvas.width = (0, _ui_utils.roundToDivide)(viewport.width * outputScale.sx, sfx[0]);\n      canvas.height = (0, _ui_utils.roundToDivide)(viewport.height * outputScale.sy, sfy[0]);\n      canvas.style.width = (0, _ui_utils.roundToDivide)(viewport.width, sfx[1]) + 'px';\n      canvas.style.height = (0, _ui_utils.roundToDivide)(viewport.height, sfy[1]) + 'px';\n      this.paintedViewportMap.set(canvas, viewport);\n      var transform = !outputScale.scaled ? null : [outputScale.sx, 0, 0, outputScale.sy, 0, 0];\n      var renderContext = {\n        canvasContext: ctx,\n        transform: transform,\n        viewport: this.viewport,\n        renderInteractiveForms: this.renderInteractiveForms\n      };\n      var renderTask = this.pdfPage.render(renderContext);\n      renderTask.onContinue = function (cont) {\n        showCanvas();\n        if (result.onRenderContinue) {\n          result.onRenderContinue(cont);\n        } else {\n          cont();\n        }\n      };\n      renderTask.promise.then(function () {\n        showCanvas();\n        renderCapability.resolve(undefined);\n      }, function (error) {\n        showCanvas();\n        renderCapability.reject(error);\n      });\n      return result;\n    }\n  }, {\n    key: 'paintOnSvg',\n    value: function paintOnSvg(wrapper) {\n      var _this2 = this;\n\n      var cancelled = false;\n      var ensureNotCancelled = function ensureNotCancelled() {\n        if (cancelled) {\n          if (_pdfjsLib.PDFJS.pdfjsNext) {\n            throw new _pdfjsLib.RenderingCancelledException('Rendering cancelled, page ' + _this2.id, 'svg');\n          } else {\n            throw 'cancelled';\n          }\n        }\n      };\n      var pdfPage = this.pdfPage;\n      var actualSizeViewport = this.viewport.clone({ scale: _ui_utils.CSS_UNITS });\n      var promise = pdfPage.getOperatorList().then(function (opList) {\n        ensureNotCancelled();\n        var svgGfx = new _pdfjsLib.SVGGraphics(pdfPage.commonObjs, pdfPage.objs);\n        return svgGfx.getSVG(opList, actualSizeViewport).then(function (svg) {\n          ensureNotCancelled();\n          _this2.svg = svg;\n          _this2.paintedViewportMap.set(svg, actualSizeViewport);\n          svg.style.width = wrapper.style.width;\n          svg.style.height = wrapper.style.height;\n          _this2.renderingState = _pdf_rendering_queue.RenderingStates.FINISHED;\n          wrapper.appendChild(svg);\n        });\n      });\n      return {\n        promise: promise,\n        onRenderContinue: function onRenderContinue(cont) {\n          cont();\n        },\n        cancel: function cancel() {\n          cancelled = true;\n        }\n      };\n    }\n  }, {\n    key: 'setPageLabel',\n    value: function setPageLabel(label) {\n      this.pageLabel = typeof label === 'string' ? label : null;\n      if (this.pageLabel !== null) {\n        this.div.setAttribute('data-page-label', this.pageLabel);\n      } else {\n        this.div.removeAttribute('data-page-label');\n      }\n    }\n  }, {\n    key: 'width',\n    get: function get() {\n      return this.viewport.width;\n    }\n  }, {\n    key: 'height',\n    get: function get() {\n      return this.viewport.height;\n    }\n  }]);\n\n  return PDFPageView;\n}();\n\nexports.PDFPageView = PDFPageView;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DefaultTextLayerFactory = exports.TextLayerBuilder = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _dom_events = __w_pdfjs_require__(2);\n\nvar _pdfjsLib = __w_pdfjs_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar EXPAND_DIVS_TIMEOUT = 300;\n\nvar TextLayerBuilder = function () {\n  function TextLayerBuilder(_ref) {\n    var textLayerDiv = _ref.textLayerDiv,\n        eventBus = _ref.eventBus,\n        pageIndex = _ref.pageIndex,\n        viewport = _ref.viewport,\n        _ref$findController = _ref.findController,\n        findController = _ref$findController === undefined ? null : _ref$findController,\n        _ref$enhanceTextSelec = _ref.enhanceTextSelection,\n        enhanceTextSelection = _ref$enhanceTextSelec === undefined ? false : _ref$enhanceTextSelec;\n\n    _classCallCheck(this, TextLayerBuilder);\n\n    this.textLayerDiv = textLayerDiv;\n    this.eventBus = eventBus || (0, _dom_events.getGlobalEventBus)();\n    this.textContent = null;\n    this.textContentItemsStr = [];\n    this.textContentStream = null;\n    this.renderingDone = false;\n    this.pageIdx = pageIndex;\n    this.pageNumber = this.pageIdx + 1;\n    this.matches = [];\n    this.viewport = viewport;\n    this.textDivs = [];\n    this.findController = findController;\n    this.textLayerRenderTask = null;\n    this.enhanceTextSelection = enhanceTextSelection;\n    this._bindMouse();\n  }\n\n  _createClass(TextLayerBuilder, [{\n    key: '_finishRendering',\n    value: function _finishRendering() {\n      this.renderingDone = true;\n      if (!this.enhanceTextSelection) {\n        var endOfContent = document.createElement('div');\n        endOfContent.className = 'endOfContent';\n        this.textLayerDiv.appendChild(endOfContent);\n      }\n      this.eventBus.dispatch('textlayerrendered', {\n        source: this,\n        pageNumber: this.pageNumber,\n        numTextDivs: this.textDivs.length\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var timeout = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      if (!(this.textContent || this.textContentStream) || this.renderingDone) {\n        return;\n      }\n      this.cancel();\n      this.textDivs = [];\n      var textLayerFrag = document.createDocumentFragment();\n      this.textLayerRenderTask = (0, _pdfjsLib.renderTextLayer)({\n        textContent: this.textContent,\n        textContentStream: this.textContentStream,\n        container: textLayerFrag,\n        viewport: this.viewport,\n        textDivs: this.textDivs,\n        textContentItemsStr: this.textContentItemsStr,\n        timeout: timeout,\n        enhanceTextSelection: this.enhanceTextSelection\n      });\n      this.textLayerRenderTask.promise.then(function () {\n        _this.textLayerDiv.appendChild(textLayerFrag);\n        _this._finishRendering();\n        _this.updateMatches();\n      }, function (reason) {});\n    }\n  }, {\n    key: 'cancel',\n    value: function cancel() {\n      if (this.textLayerRenderTask) {\n        this.textLayerRenderTask.cancel();\n        this.textLayerRenderTask = null;\n      }\n    }\n  }, {\n    key: 'setTextContentStream',\n    value: function setTextContentStream(readableStream) {\n      this.cancel();\n      this.textContentStream = readableStream;\n    }\n  }, {\n    key: 'setTextContent',\n    value: function setTextContent(textContent) {\n      this.cancel();\n      this.textContent = textContent;\n    }\n  }, {\n    key: 'convertMatches',\n    value: function convertMatches(matches, matchesLength) {\n      var i = 0;\n      var iIndex = 0;\n      var textContentItemsStr = this.textContentItemsStr;\n      var end = textContentItemsStr.length - 1;\n      var queryLen = this.findController === null ? 0 : this.findController.state.query.length;\n      var ret = [];\n      if (!matches) {\n        return ret;\n      }\n      for (var m = 0, len = matches.length; m < len; m++) {\n        var matchIdx = matches[m];\n        while (i !== end && matchIdx >= iIndex + textContentItemsStr[i].length) {\n          iIndex += textContentItemsStr[i].length;\n          i++;\n        }\n        if (i === textContentItemsStr.length) {\n          console.error('Could not find a matching mapping');\n        }\n        var match = {\n          begin: {\n            divIdx: i,\n            offset: matchIdx - iIndex\n          }\n        };\n        if (matchesLength) {\n          matchIdx += matchesLength[m];\n        } else {\n          matchIdx += queryLen;\n        }\n        while (i !== end && matchIdx > iIndex + textContentItemsStr[i].length) {\n          iIndex += textContentItemsStr[i].length;\n          i++;\n        }\n        match.end = {\n          divIdx: i,\n          offset: matchIdx - iIndex\n        };\n        ret.push(match);\n      }\n      return ret;\n    }\n  }, {\n    key: 'renderMatches',\n    value: function renderMatches(matches) {\n      if (matches.length === 0) {\n        return;\n      }\n      var textContentItemsStr = this.textContentItemsStr;\n      var textDivs = this.textDivs;\n      var prevEnd = null;\n      var pageIdx = this.pageIdx;\n      var isSelectedPage = this.findController === null ? false : pageIdx === this.findController.selected.pageIdx;\n      var selectedMatchIdx = this.findController === null ? -1 : this.findController.selected.matchIdx;\n      var highlightAll = this.findController === null ? false : this.findController.state.highlightAll;\n      var infinity = {\n        divIdx: -1,\n        offset: undefined\n      };\n      function beginText(begin, className) {\n        var divIdx = begin.divIdx;\n        textDivs[divIdx].textContent = '';\n        appendTextToDiv(divIdx, 0, begin.offset, className);\n      }\n      function appendTextToDiv(divIdx, fromOffset, toOffset, className) {\n        var div = textDivs[divIdx];\n        var content = textContentItemsStr[divIdx].substring(fromOffset, toOffset);\n        var node = document.createTextNode(content);\n        if (className) {\n          var span = document.createElement('span');\n          span.className = className;\n          span.appendChild(node);\n          div.appendChild(span);\n          return;\n        }\n        div.appendChild(node);\n      }\n      var i0 = selectedMatchIdx,\n          i1 = i0 + 1;\n      if (highlightAll) {\n        i0 = 0;\n        i1 = matches.length;\n      } else if (!isSelectedPage) {\n        return;\n      }\n      for (var i = i0; i < i1; i++) {\n        var match = matches[i];\n        var begin = match.begin;\n        var end = match.end;\n        var isSelected = isSelectedPage && i === selectedMatchIdx;\n        var highlightSuffix = isSelected ? ' selected' : '';\n        if (this.findController) {\n          this.findController.updateMatchPosition(pageIdx, i, textDivs, begin.divIdx);\n        }\n        if (!prevEnd || begin.divIdx !== prevEnd.divIdx) {\n          if (prevEnd !== null) {\n            appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n          }\n          beginText(begin);\n        } else {\n          appendTextToDiv(prevEnd.divIdx, prevEnd.offset, begin.offset);\n        }\n        if (begin.divIdx === end.divIdx) {\n          appendTextToDiv(begin.divIdx, begin.offset, end.offset, 'highlight' + highlightSuffix);\n        } else {\n          appendTextToDiv(begin.divIdx, begin.offset, infinity.offset, 'highlight begin' + highlightSuffix);\n          for (var n0 = begin.divIdx + 1, n1 = end.divIdx; n0 < n1; n0++) {\n            textDivs[n0].className = 'highlight middle' + highlightSuffix;\n          }\n          beginText(end, 'highlight end' + highlightSuffix);\n        }\n        prevEnd = end;\n      }\n      if (prevEnd) {\n        appendTextToDiv(prevEnd.divIdx, prevEnd.offset, infinity.offset);\n      }\n    }\n  }, {\n    key: 'updateMatches',\n    value: function updateMatches() {\n      if (!this.renderingDone) {\n        return;\n      }\n      var matches = this.matches;\n      var textDivs = this.textDivs;\n      var textContentItemsStr = this.textContentItemsStr;\n      var clearedUntilDivIdx = -1;\n      for (var i = 0, len = matches.length; i < len; i++) {\n        var match = matches[i];\n        var begin = Math.max(clearedUntilDivIdx, match.begin.divIdx);\n        for (var n = begin, end = match.end.divIdx; n <= end; n++) {\n          var div = textDivs[n];\n          div.textContent = textContentItemsStr[n];\n          div.className = '';\n        }\n        clearedUntilDivIdx = match.end.divIdx + 1;\n      }\n      if (this.findController === null || !this.findController.active) {\n        return;\n      }\n      var pageMatches = void 0,\n          pageMatchesLength = void 0;\n      if (this.findController !== null) {\n        pageMatches = this.findController.pageMatches[this.pageIdx] || null;\n        pageMatchesLength = this.findController.pageMatchesLength ? this.findController.pageMatchesLength[this.pageIdx] || null : null;\n      }\n      this.matches = this.convertMatches(pageMatches, pageMatchesLength);\n      this.renderMatches(this.matches);\n    }\n  }, {\n    key: '_bindMouse',\n    value: function _bindMouse() {\n      var _this2 = this;\n\n      var div = this.textLayerDiv;\n      var expandDivsTimer = null;\n      div.addEventListener('mousedown', function (evt) {\n        if (_this2.enhanceTextSelection && _this2.textLayerRenderTask) {\n          _this2.textLayerRenderTask.expandTextDivs(true);\n          if (expandDivsTimer) {\n            clearTimeout(expandDivsTimer);\n            expandDivsTimer = null;\n          }\n          return;\n        }\n        var end = div.querySelector('.endOfContent');\n        if (!end) {\n          return;\n        }\n        var adjustTop = evt.target !== div;\n        adjustTop = adjustTop && window.getComputedStyle(end).getPropertyValue('-moz-user-select') !== 'none';\n        if (adjustTop) {\n          var divBounds = div.getBoundingClientRect();\n          var r = Math.max(0, (evt.pageY - divBounds.top) / divBounds.height);\n          end.style.top = (r * 100).toFixed(2) + '%';\n        }\n        end.classList.add('active');\n      });\n      div.addEventListener('mouseup', function () {\n        if (_this2.enhanceTextSelection && _this2.textLayerRenderTask) {\n          expandDivsTimer = setTimeout(function () {\n            if (_this2.textLayerRenderTask) {\n              _this2.textLayerRenderTask.expandTextDivs(false);\n            }\n            expandDivsTimer = null;\n          }, EXPAND_DIVS_TIMEOUT);\n          return;\n        }\n        var end = div.querySelector('.endOfContent');\n        if (!end) {\n          return;\n        }\n        end.style.top = '';\n        end.classList.remove('active');\n      });\n    }\n  }]);\n\n  return TextLayerBuilder;\n}();\n\nvar DefaultTextLayerFactory = function () {\n  function DefaultTextLayerFactory() {\n    _classCallCheck(this, DefaultTextLayerFactory);\n  }\n\n  _createClass(DefaultTextLayerFactory, [{\n    key: 'createTextLayerBuilder',\n    value: function createTextLayerBuilder(textLayerDiv, pageIndex, viewport) {\n      var enhanceTextSelection = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      return new TextLayerBuilder({\n        textLayerDiv: textLayerDiv,\n        pageIndex: pageIndex,\n        viewport: viewport,\n        enhanceTextSelection: enhanceTextSelection\n      });\n    }\n  }]);\n\n  return DefaultTextLayerFactory;\n}();\n\nexports.TextLayerBuilder = TextLayerBuilder;\nexports.DefaultTextLayerFactory = DefaultTextLayerFactory;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar CLEANUP_TIMEOUT = 30000;\nvar RenderingStates = {\n  INITIAL: 0,\n  RUNNING: 1,\n  PAUSED: 2,\n  FINISHED: 3\n};\n\nvar PDFRenderingQueue = function () {\n  function PDFRenderingQueue() {\n    _classCallCheck(this, PDFRenderingQueue);\n\n    this.pdfViewer = null;\n    this.pdfThumbnailViewer = null;\n    this.onIdle = null;\n    this.highestPriorityPage = null;\n    this.idleTimeout = null;\n    this.printing = false;\n    this.isThumbnailViewEnabled = false;\n  }\n\n  _createClass(PDFRenderingQueue, [{\n    key: \"setViewer\",\n    value: function setViewer(pdfViewer) {\n      this.pdfViewer = pdfViewer;\n    }\n  }, {\n    key: \"setThumbnailViewer\",\n    value: function setThumbnailViewer(pdfThumbnailViewer) {\n      this.pdfThumbnailViewer = pdfThumbnailViewer;\n    }\n  }, {\n    key: \"isHighestPriority\",\n    value: function isHighestPriority(view) {\n      return this.highestPriorityPage === view.renderingId;\n    }\n  }, {\n    key: \"renderHighestPriority\",\n    value: function renderHighestPriority(currentlyVisiblePages) {\n      if (this.idleTimeout) {\n        clearTimeout(this.idleTimeout);\n        this.idleTimeout = null;\n      }\n      if (this.pdfViewer.forceRendering(currentlyVisiblePages)) {\n        return;\n      }\n      if (this.pdfThumbnailViewer && this.isThumbnailViewEnabled) {\n        if (this.pdfThumbnailViewer.forceRendering()) {\n          return;\n        }\n      }\n      if (this.printing) {\n        return;\n      }\n      if (this.onIdle) {\n        this.idleTimeout = setTimeout(this.onIdle.bind(this), CLEANUP_TIMEOUT);\n      }\n    }\n  }, {\n    key: \"getHighestPriority\",\n    value: function getHighestPriority(visible, views, scrolledDown) {\n      var visibleViews = visible.views;\n      var numVisible = visibleViews.length;\n      if (numVisible === 0) {\n        return false;\n      }\n      for (var i = 0; i < numVisible; ++i) {\n        var view = visibleViews[i].view;\n        if (!this.isViewFinished(view)) {\n          return view;\n        }\n      }\n      if (scrolledDown) {\n        var nextPageIndex = visible.last.id;\n        if (views[nextPageIndex] && !this.isViewFinished(views[nextPageIndex])) {\n          return views[nextPageIndex];\n        }\n      } else {\n        var previousPageIndex = visible.first.id - 2;\n        if (views[previousPageIndex] && !this.isViewFinished(views[previousPageIndex])) {\n          return views[previousPageIndex];\n        }\n      }\n      return null;\n    }\n  }, {\n    key: \"isViewFinished\",\n    value: function isViewFinished(view) {\n      return view.renderingState === RenderingStates.FINISHED;\n    }\n  }, {\n    key: \"renderView\",\n    value: function renderView(view) {\n      var _this = this;\n\n      switch (view.renderingState) {\n        case RenderingStates.FINISHED:\n          return false;\n        case RenderingStates.PAUSED:\n          this.highestPriorityPage = view.renderingId;\n          view.resume();\n          break;\n        case RenderingStates.RUNNING:\n          this.highestPriorityPage = view.renderingId;\n          break;\n        case RenderingStates.INITIAL:\n          this.highestPriorityPage = view.renderingId;\n          var continueRendering = function continueRendering() {\n            _this.renderHighestPriority();\n          };\n          view.draw().then(continueRendering, continueRendering);\n          break;\n      }\n      return true;\n    }\n  }]);\n\n  return PDFRenderingQueue;\n}();\n\nexports.RenderingStates = RenderingStates;\nexports.PDFRenderingQueue = PDFRenderingQueue;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DownloadManager = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _pdfjsLib = __w_pdfjs_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n;\nfunction _download(blobUrl, filename) {\n  var a = document.createElement('a');\n  if (a.click) {\n    a.href = blobUrl;\n    a.target = '_parent';\n    if ('download' in a) {\n      a.download = filename;\n    }\n    (document.body || document.documentElement).appendChild(a);\n    a.click();\n    a.parentNode.removeChild(a);\n  } else {\n    if (window.top === window && blobUrl.split('#')[0] === window.location.href.split('#')[0]) {\n      var padCharacter = blobUrl.indexOf('?') === -1 ? '?' : '&';\n      blobUrl = blobUrl.replace(/#|$/, padCharacter + '$&');\n    }\n    window.open(blobUrl, '_parent');\n  }\n}\n\nvar DownloadManager = function () {\n  function DownloadManager() {\n    _classCallCheck(this, DownloadManager);\n  }\n\n  _createClass(DownloadManager, [{\n    key: 'downloadUrl',\n    value: function downloadUrl(url, filename) {\n      if (!(0, _pdfjsLib.createValidAbsoluteUrl)(url, 'http://example.com')) {\n        return;\n      }\n      _download(url + '#pdfjs.action=download', filename);\n    }\n  }, {\n    key: 'downloadData',\n    value: function downloadData(data, filename, contentType) {\n      if (navigator.msSaveBlob) {\n        return navigator.msSaveBlob(new Blob([data], { type: contentType }), filename);\n      }\n      var blobUrl = (0, _pdfjsLib.createObjectURL)(data, contentType, _pdfjsLib.PDFJS.disableCreateObjectURL);\n      _download(blobUrl, filename);\n    }\n  }, {\n    key: 'download',\n    value: function download(blob, url, filename) {\n      if (navigator.msSaveBlob) {\n        if (!navigator.msSaveBlob(blob, filename)) {\n          this.downloadUrl(url, filename);\n        }\n        return;\n      }\n      if (_pdfjsLib.PDFJS.disableCreateObjectURL) {\n        this.downloadUrl(url, filename);\n        return;\n      }\n      var blobUrl = URL.createObjectURL(blob);\n      _download(blobUrl, filename);\n    }\n  }]);\n\n  return DownloadManager;\n}();\n\nexports.DownloadManager = DownloadManager;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GenericL10n = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\n__w_pdfjs_require__(13);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar webL10n = document.webL10n;\n\nvar GenericL10n = function () {\n  function GenericL10n(lang) {\n    _classCallCheck(this, GenericL10n);\n\n    this._lang = lang;\n    this._ready = new Promise(function (resolve, reject) {\n      webL10n.setLanguage(lang, function () {\n        resolve(webL10n);\n      });\n    });\n  }\n\n  _createClass(GenericL10n, [{\n    key: 'getDirection',\n    value: function getDirection() {\n      return this._ready.then(function (l10n) {\n        return l10n.getDirection();\n      });\n    }\n  }, {\n    key: 'get',\n    value: function get(property, args, fallback) {\n      return this._ready.then(function (l10n) {\n        return l10n.get(property, args, fallback);\n      });\n    }\n  }, {\n    key: 'translate',\n    value: function translate(element) {\n      return this._ready.then(function (l10n) {\n        return l10n.translate(element);\n      });\n    }\n  }]);\n\n  return GenericL10n;\n}();\n\nexports.GenericL10n = GenericL10n;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFFindController = exports.FindState = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _pdfjsLib = __w_pdfjs_require__(0);\n\nvar _ui_utils = __w_pdfjs_require__(1);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FindState = {\n  FOUND: 0,\n  NOT_FOUND: 1,\n  WRAPPED: 2,\n  PENDING: 3\n};\nvar FIND_SCROLL_OFFSET_TOP = -50;\nvar FIND_SCROLL_OFFSET_LEFT = -400;\nvar FIND_TIMEOUT = 250;\nvar CHARACTERS_TO_NORMALIZE = {\n  '\\u2018': '\\'',\n  '\\u2019': '\\'',\n  '\\u201A': '\\'',\n  '\\u201B': '\\'',\n  '\\u201C': '\"',\n  '\\u201D': '\"',\n  '\\u201E': '\"',\n  '\\u201F': '\"',\n  '\\xBC': '1/4',\n  '\\xBD': '1/2',\n  '\\xBE': '3/4'\n};\n\nvar PDFFindController = function () {\n  function PDFFindController(_ref) {\n    var pdfViewer = _ref.pdfViewer;\n\n    _classCallCheck(this, PDFFindController);\n\n    this.pdfViewer = pdfViewer;\n    this.onUpdateResultsCount = null;\n    this.onUpdateState = null;\n    this.reset();\n    var replace = Object.keys(CHARACTERS_TO_NORMALIZE).join('');\n    this.normalizationRegex = new RegExp('[' + replace + ']', 'g');\n  }\n\n  _createClass(PDFFindController, [{\n    key: 'reset',\n    value: function reset() {\n      var _this = this;\n\n      this.startedTextExtraction = false;\n      this.extractTextPromises = [];\n      this.pendingFindMatches = Object.create(null);\n      this.active = false;\n      this.pageContents = [];\n      this.pageMatches = [];\n      this.pageMatchesLength = null;\n      this.matchCount = 0;\n      this.selected = {\n        pageIdx: -1,\n        matchIdx: -1\n      };\n      this.offset = {\n        pageIdx: null,\n        matchIdx: null\n      };\n      this.pagesToSearch = null;\n      this.resumePageIdx = null;\n      this.state = null;\n      this.dirtyMatch = false;\n      this.findTimeout = null;\n      this._firstPagePromise = new Promise(function (resolve) {\n        _this.resolveFirstPage = resolve;\n      });\n    }\n  }, {\n    key: 'normalize',\n    value: function normalize(text) {\n      return text.replace(this.normalizationRegex, function (ch) {\n        return CHARACTERS_TO_NORMALIZE[ch];\n      });\n    }\n  }, {\n    key: '_prepareMatches',\n    value: function _prepareMatches(matchesWithLength, matches, matchesLength) {\n      function isSubTerm(matchesWithLength, currentIndex) {\n        var currentElem = matchesWithLength[currentIndex];\n        var nextElem = matchesWithLength[currentIndex + 1];\n        if (currentIndex < matchesWithLength.length - 1 && currentElem.match === nextElem.match) {\n          currentElem.skipped = true;\n          return true;\n        }\n        for (var i = currentIndex - 1; i >= 0; i--) {\n          var prevElem = matchesWithLength[i];\n          if (prevElem.skipped) {\n            continue;\n          }\n          if (prevElem.match + prevElem.matchLength < currentElem.match) {\n            break;\n          }\n          if (prevElem.match + prevElem.matchLength >= currentElem.match + currentElem.matchLength) {\n            currentElem.skipped = true;\n            return true;\n          }\n        }\n        return false;\n      }\n      matchesWithLength.sort(function (a, b) {\n        return a.match === b.match ? a.matchLength - b.matchLength : a.match - b.match;\n      });\n      for (var i = 0, len = matchesWithLength.length; i < len; i++) {\n        if (isSubTerm(matchesWithLength, i)) {\n          continue;\n        }\n        matches.push(matchesWithLength[i].match);\n        matchesLength.push(matchesWithLength[i].matchLength);\n      }\n    }\n  }, {\n    key: 'calcFindPhraseMatch',\n    value: function calcFindPhraseMatch(query, pageIndex, pageContent) {\n      var matches = [];\n      var queryLen = query.length;\n      var matchIdx = -queryLen;\n      while (true) {\n        matchIdx = pageContent.indexOf(query, matchIdx + queryLen);\n        if (matchIdx === -1) {\n          break;\n        }\n        matches.push(matchIdx);\n      }\n      this.pageMatches[pageIndex] = matches;\n    }\n  }, {\n    key: 'calcFindWordMatch',\n    value: function calcFindWordMatch(query, pageIndex, pageContent) {\n      var matchesWithLength = [];\n      var queryArray = query.match(/\\S+/g);\n      for (var i = 0, len = queryArray.length; i < len; i++) {\n        var subquery = queryArray[i];\n        var subqueryLen = subquery.length;\n        var matchIdx = -subqueryLen;\n        while (true) {\n          matchIdx = pageContent.indexOf(subquery, matchIdx + subqueryLen);\n          if (matchIdx === -1) {\n            break;\n          }\n          matchesWithLength.push({\n            match: matchIdx,\n            matchLength: subqueryLen,\n            skipped: false\n          });\n        }\n      }\n      if (!this.pageMatchesLength) {\n        this.pageMatchesLength = [];\n      }\n      this.pageMatchesLength[pageIndex] = [];\n      this.pageMatches[pageIndex] = [];\n      this._prepareMatches(matchesWithLength, this.pageMatches[pageIndex], this.pageMatchesLength[pageIndex]);\n    }\n  }, {\n    key: 'calcFindMatch',\n    value: function calcFindMatch(pageIndex) {\n      var pageContent = this.normalize(this.pageContents[pageIndex]);\n      var query = this.normalize(this.state.query);\n      var caseSensitive = this.state.caseSensitive;\n      var phraseSearch = this.state.phraseSearch;\n      var queryLen = query.length;\n      if (queryLen === 0) {\n        return;\n      }\n      if (!caseSensitive) {\n        pageContent = pageContent.toLowerCase();\n        query = query.toLowerCase();\n      }\n      if (phraseSearch) {\n        this.calcFindPhraseMatch(query, pageIndex, pageContent);\n      } else {\n        this.calcFindWordMatch(query, pageIndex, pageContent);\n      }\n      this.updatePage(pageIndex);\n      if (this.resumePageIdx === pageIndex) {\n        this.resumePageIdx = null;\n        this.nextPageMatch();\n      }\n      if (this.pageMatches[pageIndex].length > 0) {\n        this.matchCount += this.pageMatches[pageIndex].length;\n        this.updateUIResultsCount();\n      }\n    }\n  }, {\n    key: 'extractText',\n    value: function extractText() {\n      var _this2 = this;\n\n      if (this.startedTextExtraction) {\n        return;\n      }\n      this.startedTextExtraction = true;\n      this.pageContents.length = 0;\n      var promise = Promise.resolve();\n\n      var _loop = function _loop(i, ii) {\n        var extractTextCapability = (0, _pdfjsLib.createPromiseCapability)();\n        _this2.extractTextPromises[i] = extractTextCapability.promise;\n        promise = promise.then(function () {\n          return _this2.pdfViewer.getPageTextContent(i).then(function (textContent) {\n            var textItems = textContent.items;\n            var strBuf = [];\n            for (var j = 0, jj = textItems.length; j < jj; j++) {\n              strBuf.push(textItems[j].str);\n            }\n            _this2.pageContents[i] = strBuf.join('');\n            extractTextCapability.resolve(i);\n          }, function (reason) {\n            console.error('Unable to get page ' + (i + 1) + ' text content', reason);\n            _this2.pageContents[i] = '';\n            extractTextCapability.resolve(i);\n          });\n        });\n      };\n\n      for (var i = 0, ii = this.pdfViewer.pagesCount; i < ii; i++) {\n        _loop(i, ii);\n      }\n    }\n  }, {\n    key: 'executeCommand',\n    value: function executeCommand(cmd, state) {\n      var _this3 = this;\n\n      if (this.state === null || cmd !== 'findagain') {\n        this.dirtyMatch = true;\n      }\n      this.state = state;\n      this.updateUIState(FindState.PENDING);\n      this._firstPagePromise.then(function () {\n        _this3.extractText();\n        clearTimeout(_this3.findTimeout);\n        if (cmd === 'find') {\n          _this3.findTimeout = setTimeout(_this3.nextMatch.bind(_this3), FIND_TIMEOUT);\n        } else {\n          _this3.nextMatch();\n        }\n      });\n    }\n  }, {\n    key: 'updatePage',\n    value: function updatePage(index) {\n      if (this.selected.pageIdx === index) {\n        this.pdfViewer.currentPageNumber = index + 1;\n      }\n      var page = this.pdfViewer.getPageView(index);\n      if (page.textLayer) {\n        page.textLayer.updateMatches();\n      }\n    }\n  }, {\n    key: 'nextMatch',\n    value: function nextMatch() {\n      var _this4 = this;\n\n      var previous = this.state.findPrevious;\n      var currentPageIndex = this.pdfViewer.currentPageNumber - 1;\n      var numPages = this.pdfViewer.pagesCount;\n      this.active = true;\n      if (this.dirtyMatch) {\n        this.dirtyMatch = false;\n        this.selected.pageIdx = this.selected.matchIdx = -1;\n        this.offset.pageIdx = currentPageIndex;\n        this.offset.matchIdx = null;\n        this.hadMatch = false;\n        this.resumePageIdx = null;\n        this.pageMatches = [];\n        this.matchCount = 0;\n        this.pageMatchesLength = null;\n        for (var i = 0; i < numPages; i++) {\n          this.updatePage(i);\n          if (!(i in this.pendingFindMatches)) {\n            this.pendingFindMatches[i] = true;\n            this.extractTextPromises[i].then(function (pageIdx) {\n              delete _this4.pendingFindMatches[pageIdx];\n              _this4.calcFindMatch(pageIdx);\n            });\n          }\n        }\n      }\n      if (this.state.query === '') {\n        this.updateUIState(FindState.FOUND);\n        return;\n      }\n      if (this.resumePageIdx) {\n        return;\n      }\n      var offset = this.offset;\n      this.pagesToSearch = numPages;\n      if (offset.matchIdx !== null) {\n        var numPageMatches = this.pageMatches[offset.pageIdx].length;\n        if (!previous && offset.matchIdx + 1 < numPageMatches || previous && offset.matchIdx > 0) {\n          this.hadMatch = true;\n          offset.matchIdx = previous ? offset.matchIdx - 1 : offset.matchIdx + 1;\n          this.updateMatch(true);\n          return;\n        }\n        this.advanceOffsetPage(previous);\n      }\n      this.nextPageMatch();\n    }\n  }, {\n    key: 'matchesReady',\n    value: function matchesReady(matches) {\n      var offset = this.offset;\n      var numMatches = matches.length;\n      var previous = this.state.findPrevious;\n      if (numMatches) {\n        this.hadMatch = true;\n        offset.matchIdx = previous ? numMatches - 1 : 0;\n        this.updateMatch(true);\n        return true;\n      }\n      this.advanceOffsetPage(previous);\n      if (offset.wrapped) {\n        offset.matchIdx = null;\n        if (this.pagesToSearch < 0) {\n          this.updateMatch(false);\n          return true;\n        }\n      }\n      return false;\n    }\n  }, {\n    key: 'updateMatchPosition',\n    value: function updateMatchPosition(pageIndex, matchIndex, elements, beginIdx) {\n      if (this.selected.matchIdx === matchIndex && this.selected.pageIdx === pageIndex) {\n        var spot = {\n          top: FIND_SCROLL_OFFSET_TOP,\n          left: FIND_SCROLL_OFFSET_LEFT\n        };\n        (0, _ui_utils.scrollIntoView)(elements[beginIdx], spot, true);\n      }\n    }\n  }, {\n    key: 'nextPageMatch',\n    value: function nextPageMatch() {\n      if (this.resumePageIdx !== null) {\n        console.error('There can only be one pending page.');\n      }\n      var matches = null;\n      do {\n        var pageIdx = this.offset.pageIdx;\n        matches = this.pageMatches[pageIdx];\n        if (!matches) {\n          this.resumePageIdx = pageIdx;\n          break;\n        }\n      } while (!this.matchesReady(matches));\n    }\n  }, {\n    key: 'advanceOffsetPage',\n    value: function advanceOffsetPage(previous) {\n      var offset = this.offset;\n      var numPages = this.extractTextPromises.length;\n      offset.pageIdx = previous ? offset.pageIdx - 1 : offset.pageIdx + 1;\n      offset.matchIdx = null;\n      this.pagesToSearch--;\n      if (offset.pageIdx >= numPages || offset.pageIdx < 0) {\n        offset.pageIdx = previous ? numPages - 1 : 0;\n        offset.wrapped = true;\n      }\n    }\n  }, {\n    key: 'updateMatch',\n    value: function updateMatch() {\n      var found = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var state = FindState.NOT_FOUND;\n      var wrapped = this.offset.wrapped;\n      this.offset.wrapped = false;\n      if (found) {\n        var previousPage = this.selected.pageIdx;\n        this.selected.pageIdx = this.offset.pageIdx;\n        this.selected.matchIdx = this.offset.matchIdx;\n        state = wrapped ? FindState.WRAPPED : FindState.FOUND;\n        if (previousPage !== -1 && previousPage !== this.selected.pageIdx) {\n          this.updatePage(previousPage);\n        }\n      }\n      this.updateUIState(state, this.state.findPrevious);\n      if (this.selected.pageIdx !== -1) {\n        this.updatePage(this.selected.pageIdx);\n      }\n    }\n  }, {\n    key: 'updateUIResultsCount',\n    value: function updateUIResultsCount() {\n      if (this.onUpdateResultsCount) {\n        this.onUpdateResultsCount(this.matchCount);\n      }\n    }\n  }, {\n    key: 'updateUIState',\n    value: function updateUIState(state, previous) {\n      if (this.onUpdateState) {\n        this.onUpdateState(state, previous, this.matchCount);\n      }\n    }\n  }]);\n\n  return PDFFindController;\n}();\n\nexports.FindState = FindState;\nexports.PDFFindController = PDFFindController;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFHistory = undefined;\n\nvar _dom_events = __w_pdfjs_require__(2);\n\nfunction PDFHistory(options) {\n  this.linkService = options.linkService;\n  this.eventBus = options.eventBus || (0, _dom_events.getGlobalEventBus)();\n  this.initialized = false;\n  this.initialDestination = null;\n  this.initialBookmark = null;\n}\nPDFHistory.prototype = {\n  initialize: function pdfHistoryInitialize(fingerprint) {\n    this.initialized = true;\n    this.reInitialized = false;\n    this.allowHashChange = true;\n    this.historyUnlocked = true;\n    this.isViewerInPresentationMode = false;\n    this.previousHash = window.location.hash.substring(1);\n    this.currentBookmark = '';\n    this.currentPage = 0;\n    this.updatePreviousBookmark = false;\n    this.previousBookmark = '';\n    this.previousPage = 0;\n    this.nextHashParam = '';\n    this.fingerprint = fingerprint;\n    this.currentUid = this.uid = 0;\n    this.current = {};\n    var state = window.history.state;\n    if (this._isStateObjectDefined(state)) {\n      if (state.target.dest) {\n        this.initialDestination = state.target.dest;\n      } else {\n        this.initialBookmark = state.target.hash;\n      }\n      this.currentUid = state.uid;\n      this.uid = state.uid + 1;\n      this.current = state.target;\n    } else {\n      if (state && state.fingerprint && this.fingerprint !== state.fingerprint) {\n        this.reInitialized = true;\n      }\n      this._pushOrReplaceState({ fingerprint: this.fingerprint }, true);\n    }\n    var self = this;\n    window.addEventListener('popstate', function pdfHistoryPopstate(evt) {\n      if (!self.historyUnlocked) {\n        return;\n      }\n      if (evt.state) {\n        self._goTo(evt.state);\n        return;\n      }\n      if (self.uid === 0) {\n        var previousParams = self.previousHash && self.currentBookmark && self.previousHash !== self.currentBookmark ? {\n          hash: self.currentBookmark,\n          page: self.currentPage\n        } : { page: 1 };\n        replacePreviousHistoryState(previousParams, function () {\n          updateHistoryWithCurrentHash();\n        });\n      } else {\n        updateHistoryWithCurrentHash();\n      }\n    });\n    function updateHistoryWithCurrentHash() {\n      self.previousHash = window.location.hash.slice(1);\n      self._pushToHistory({ hash: self.previousHash }, false, true);\n      self._updatePreviousBookmark();\n    }\n    function replacePreviousHistoryState(params, callback) {\n      self.historyUnlocked = false;\n      self.allowHashChange = false;\n      window.addEventListener('popstate', rewriteHistoryAfterBack);\n      history.back();\n      function rewriteHistoryAfterBack() {\n        window.removeEventListener('popstate', rewriteHistoryAfterBack);\n        window.addEventListener('popstate', rewriteHistoryAfterForward);\n        self._pushToHistory(params, false, true);\n        history.forward();\n      }\n      function rewriteHistoryAfterForward() {\n        window.removeEventListener('popstate', rewriteHistoryAfterForward);\n        self.allowHashChange = true;\n        self.historyUnlocked = true;\n        callback();\n      }\n    }\n    function pdfHistoryBeforeUnload() {\n      var previousParams = self._getPreviousParams(null, true);\n      if (previousParams) {\n        var replacePrevious = !self.current.dest && self.current.hash !== self.previousHash;\n        self._pushToHistory(previousParams, false, replacePrevious);\n        self._updatePreviousBookmark();\n      }\n      window.removeEventListener('beforeunload', pdfHistoryBeforeUnload);\n    }\n    window.addEventListener('beforeunload', pdfHistoryBeforeUnload);\n    window.addEventListener('pageshow', function pdfHistoryPageShow(evt) {\n      window.addEventListener('beforeunload', pdfHistoryBeforeUnload);\n    });\n    self.eventBus.on('presentationmodechanged', function (e) {\n      self.isViewerInPresentationMode = e.active;\n    });\n  },\n  clearHistoryState: function pdfHistory_clearHistoryState() {\n    this._pushOrReplaceState(null, true);\n  },\n  _isStateObjectDefined: function pdfHistory_isStateObjectDefined(state) {\n    return state && state.uid >= 0 && state.fingerprint && this.fingerprint === state.fingerprint && state.target && state.target.hash ? true : false;\n  },\n  _pushOrReplaceState: function pdfHistory_pushOrReplaceState(stateObj, replace) {\n    if (replace) {\n      window.history.replaceState(stateObj, '', document.URL);\n    } else {\n      window.history.pushState(stateObj, '', document.URL);\n    }\n  },\n  get isHashChangeUnlocked() {\n    if (!this.initialized) {\n      return true;\n    }\n    return this.allowHashChange;\n  },\n  _updatePreviousBookmark: function pdfHistory_updatePreviousBookmark() {\n    if (this.updatePreviousBookmark && this.currentBookmark && this.currentPage) {\n      this.previousBookmark = this.currentBookmark;\n      this.previousPage = this.currentPage;\n      this.updatePreviousBookmark = false;\n    }\n  },\n  updateCurrentBookmark: function pdfHistoryUpdateCurrentBookmark(bookmark, pageNum) {\n    if (this.initialized) {\n      this.currentBookmark = bookmark.substring(1);\n      this.currentPage = pageNum | 0;\n      this._updatePreviousBookmark();\n    }\n  },\n  updateNextHashParam: function pdfHistoryUpdateNextHashParam(param) {\n    if (this.initialized) {\n      this.nextHashParam = param;\n    }\n  },\n  push: function pdfHistoryPush(params, isInitialBookmark) {\n    if (!(this.initialized && this.historyUnlocked)) {\n      return;\n    }\n    if (params.dest && !params.hash) {\n      params.hash = this.current.hash && this.current.dest && this.current.dest === params.dest ? this.current.hash : this.linkService.getDestinationHash(params.dest).split('#')[1];\n    }\n    if (params.page) {\n      params.page |= 0;\n    }\n    if (isInitialBookmark) {\n      var target = window.history.state.target;\n      if (!target) {\n        this._pushToHistory(params, false);\n        this.previousHash = window.location.hash.substring(1);\n      }\n      this.updatePreviousBookmark = this.nextHashParam ? false : true;\n      if (target) {\n        this._updatePreviousBookmark();\n      }\n      return;\n    }\n    if (this.nextHashParam) {\n      if (this.nextHashParam === params.hash) {\n        this.nextHashParam = null;\n        this.updatePreviousBookmark = true;\n        return;\n      }\n      this.nextHashParam = null;\n    }\n    if (params.hash) {\n      if (this.current.hash) {\n        if (this.current.hash !== params.hash) {\n          this._pushToHistory(params, true);\n        } else {\n          if (!this.current.page && params.page) {\n            this._pushToHistory(params, false, true);\n          }\n          this.updatePreviousBookmark = true;\n        }\n      } else {\n        this._pushToHistory(params, true);\n      }\n    } else if (this.current.page && params.page && this.current.page !== params.page) {\n      this._pushToHistory(params, true);\n    }\n  },\n  _getPreviousParams: function pdfHistory_getPreviousParams(onlyCheckPage, beforeUnload) {\n    if (!(this.currentBookmark && this.currentPage)) {\n      return null;\n    } else if (this.updatePreviousBookmark) {\n      this.updatePreviousBookmark = false;\n    }\n    if (this.uid > 0 && !(this.previousBookmark && this.previousPage)) {\n      return null;\n    }\n    if (!this.current.dest && !onlyCheckPage || beforeUnload) {\n      if (this.previousBookmark === this.currentBookmark) {\n        return null;\n      }\n    } else if (this.current.page || onlyCheckPage) {\n      if (this.previousPage === this.currentPage) {\n        return null;\n      }\n    } else {\n      return null;\n    }\n    var params = {\n      hash: this.currentBookmark,\n      page: this.currentPage\n    };\n    if (this.isViewerInPresentationMode) {\n      params.hash = null;\n    }\n    return params;\n  },\n  _stateObj: function pdfHistory_stateObj(params) {\n    return {\n      fingerprint: this.fingerprint,\n      uid: this.uid,\n      target: params\n    };\n  },\n  _pushToHistory: function pdfHistory_pushToHistory(params, addPrevious, overwrite) {\n    if (!this.initialized) {\n      return;\n    }\n    if (!params.hash && params.page) {\n      params.hash = 'page=' + params.page;\n    }\n    if (addPrevious && !overwrite) {\n      var previousParams = this._getPreviousParams();\n      if (previousParams) {\n        var replacePrevious = !this.current.dest && this.current.hash !== this.previousHash;\n        this._pushToHistory(previousParams, false, replacePrevious);\n      }\n    }\n    this._pushOrReplaceState(this._stateObj(params), overwrite || this.uid === 0);\n    this.currentUid = this.uid++;\n    this.current = params;\n    this.updatePreviousBookmark = true;\n  },\n  _goTo: function pdfHistory_goTo(state) {\n    if (!(this.initialized && this.historyUnlocked && this._isStateObjectDefined(state))) {\n      return;\n    }\n    if (!this.reInitialized && state.uid < this.currentUid) {\n      var previousParams = this._getPreviousParams(true);\n      if (previousParams) {\n        this._pushToHistory(this.current, false);\n        this._pushToHistory(previousParams, false);\n        this.currentUid = state.uid;\n        window.history.back();\n        return;\n      }\n    }\n    this.historyUnlocked = false;\n    if (state.target.dest) {\n      this.linkService.navigateTo(state.target.dest);\n    } else {\n      this.linkService.setHash(state.target.hash);\n    }\n    this.currentUid = state.uid;\n    if (state.uid > this.uid) {\n      this.uid = state.uid;\n    }\n    this.current = state.target;\n    this.updatePreviousBookmark = true;\n    var currentHash = window.location.hash.substring(1);\n    if (this.previousHash !== currentHash) {\n      this.allowHashChange = false;\n    }\n    this.previousHash = currentHash;\n    this.historyUnlocked = true;\n  },\n  back: function pdfHistoryBack() {\n    this.go(-1);\n  },\n  forward: function pdfHistoryForward() {\n    this.go(1);\n  },\n  go: function pdfHistoryGo(direction) {\n    if (this.initialized && this.historyUnlocked) {\n      var state = window.history.state;\n      if (direction === -1 && state && state.uid > 0) {\n        window.history.back();\n      } else if (direction === 1 && state && state.uid < this.uid - 1) {\n        window.history.forward();\n      }\n    }\n  }\n};\nexports.PDFHistory = PDFHistory;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFViewer = exports.PresentationModeState = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _pdfjsLib = __w_pdfjs_require__(0);\n\nvar _ui_utils = __w_pdfjs_require__(1);\n\nvar _pdf_rendering_queue = __w_pdfjs_require__(7);\n\nvar _annotation_layer_builder = __w_pdfjs_require__(4);\n\nvar _dom_events = __w_pdfjs_require__(2);\n\nvar _pdf_page_view = __w_pdfjs_require__(5);\n\nvar _pdf_link_service = __w_pdfjs_require__(3);\n\nvar _text_layer_builder = __w_pdfjs_require__(6);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PresentationModeState = {\n  UNKNOWN: 0,\n  NORMAL: 1,\n  CHANGING: 2,\n  FULLSCREEN: 3\n};\nvar DEFAULT_CACHE_SIZE = 10;\nfunction PDFPageViewBuffer(size) {\n  var data = [];\n  this.push = function cachePush(view) {\n    var i = data.indexOf(view);\n    if (i >= 0) {\n      data.splice(i, 1);\n    }\n    data.push(view);\n    if (data.length > size) {\n      data.shift().destroy();\n    }\n  };\n  this.resize = function (newSize) {\n    size = newSize;\n    while (data.length > size) {\n      data.shift().destroy();\n    }\n  };\n}\nfunction isSameScale(oldScale, newScale) {\n  if (newScale === oldScale) {\n    return true;\n  }\n  if (Math.abs(newScale - oldScale) < 1e-15) {\n    return true;\n  }\n  return false;\n}\nfunction isPortraitOrientation(size) {\n  return size.width <= size.height;\n}\n\nvar PDFViewer = function () {\n  function PDFViewer(options) {\n    _classCallCheck(this, PDFViewer);\n\n    this.container = options.container;\n    this.viewer = options.viewer || options.container.firstElementChild;\n    this.eventBus = options.eventBus || (0, _dom_events.getGlobalEventBus)();\n    this.linkService = options.linkService || new _pdf_link_service.SimpleLinkService();\n    this.downloadManager = options.downloadManager || null;\n    this.removePageBorders = options.removePageBorders || false;\n    this.enhanceTextSelection = options.enhanceTextSelection || false;\n    this.renderInteractiveForms = options.renderInteractiveForms || false;\n    this.enablePrintAutoRotate = options.enablePrintAutoRotate || false;\n    this.renderer = options.renderer || _ui_utils.RendererType.CANVAS;\n    this.l10n = options.l10n || _ui_utils.NullL10n;\n    this.defaultRenderingQueue = !options.renderingQueue;\n    if (this.defaultRenderingQueue) {\n      this.renderingQueue = new _pdf_rendering_queue.PDFRenderingQueue();\n      this.renderingQueue.setViewer(this);\n    } else {\n      this.renderingQueue = options.renderingQueue;\n    }\n    this.scroll = (0, _ui_utils.watchScroll)(this.container, this._scrollUpdate.bind(this));\n    this.presentationModeState = PresentationModeState.UNKNOWN;\n    this._resetView();\n    if (this.removePageBorders) {\n      this.viewer.classList.add('removePageBorders');\n    }\n  }\n\n  _createClass(PDFViewer, [{\n    key: 'getPageView',\n    value: function getPageView(index) {\n      return this._pages[index];\n    }\n  }, {\n    key: '_setCurrentPageNumber',\n    value: function _setCurrentPageNumber(val) {\n      var resetCurrentPageView = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (this._currentPageNumber === val) {\n        if (resetCurrentPageView) {\n          this._resetCurrentPageView();\n        }\n        return;\n      }\n      if (!(0 < val && val <= this.pagesCount)) {\n        console.error('PDFViewer._setCurrentPageNumber: \"' + val + '\" is out of bounds.');\n        return;\n      }\n      var arg = {\n        source: this,\n        pageNumber: val,\n        pageLabel: this._pageLabels && this._pageLabels[val - 1]\n      };\n      this._currentPageNumber = val;\n      this.eventBus.dispatch('pagechanging', arg);\n      this.eventBus.dispatch('pagechange', arg);\n      if (resetCurrentPageView) {\n        this._resetCurrentPageView();\n      }\n    }\n  }, {\n    key: 'setDocument',\n    value: function setDocument(pdfDocument) {\n      var _this = this;\n\n      if (this.pdfDocument) {\n        this._cancelRendering();\n        this._resetView();\n      }\n      this.pdfDocument = pdfDocument;\n      if (!pdfDocument) {\n        return;\n      }\n      var pagesCount = pdfDocument.numPages;\n      var pagesCapability = (0, _pdfjsLib.createPromiseCapability)();\n      this.pagesPromise = pagesCapability.promise;\n      pagesCapability.promise.then(function () {\n        _this._pageViewsReady = true;\n        _this.eventBus.dispatch('pagesloaded', {\n          source: _this,\n          pagesCount: pagesCount\n        });\n      });\n      var isOnePageRenderedResolved = false;\n      var onePageRenderedCapability = (0, _pdfjsLib.createPromiseCapability)();\n      this.onePageRendered = onePageRenderedCapability.promise;\n      var bindOnAfterAndBeforeDraw = function bindOnAfterAndBeforeDraw(pageView) {\n        pageView.onBeforeDraw = function () {\n          _this._buffer.push(pageView);\n        };\n        pageView.onAfterDraw = function () {\n          if (!isOnePageRenderedResolved) {\n            isOnePageRenderedResolved = true;\n            onePageRenderedCapability.resolve();\n          }\n        };\n      };\n      var firstPagePromise = pdfDocument.getPage(1);\n      this.firstPagePromise = firstPagePromise;\n      firstPagePromise.then(function (pdfPage) {\n        var scale = _this.currentScale;\n        var viewport = pdfPage.getViewport(scale * _ui_utils.CSS_UNITS);\n        for (var pageNum = 1; pageNum <= pagesCount; ++pageNum) {\n          var textLayerFactory = null;\n          if (!_pdfjsLib.PDFJS.disableTextLayer) {\n            textLayerFactory = _this;\n          }\n          var pageView = new _pdf_page_view.PDFPageView({\n            container: _this.viewer,\n            eventBus: _this.eventBus,\n            id: pageNum,\n            scale: scale,\n            defaultViewport: viewport.clone(),\n            renderingQueue: _this.renderingQueue,\n            textLayerFactory: textLayerFactory,\n            annotationLayerFactory: _this,\n            enhanceTextSelection: _this.enhanceTextSelection,\n            renderInteractiveForms: _this.renderInteractiveForms,\n            renderer: _this.renderer,\n            l10n: _this.l10n\n          });\n          bindOnAfterAndBeforeDraw(pageView);\n          _this._pages.push(pageView);\n        }\n        onePageRenderedCapability.promise.then(function () {\n          if (_pdfjsLib.PDFJS.disableAutoFetch) {\n            pagesCapability.resolve();\n            return;\n          }\n          var getPagesLeft = pagesCount;\n\n          var _loop = function _loop(_pageNum) {\n            pdfDocument.getPage(_pageNum).then(function (pdfPage) {\n              var pageView = _this._pages[_pageNum - 1];\n              if (!pageView.pdfPage) {\n                pageView.setPdfPage(pdfPage);\n              }\n              _this.linkService.cachePageRef(_pageNum, pdfPage.ref);\n              if (--getPagesLeft === 0) {\n                pagesCapability.resolve();\n              }\n            }, function (reason) {\n              console.error('Unable to get page ' + _pageNum + ' to initialize viewer', reason);\n              if (--getPagesLeft === 0) {\n                pagesCapability.resolve();\n              }\n            });\n          };\n\n          for (var _pageNum = 1; _pageNum <= pagesCount; ++_pageNum) {\n            _loop(_pageNum);\n          }\n        });\n        _this.eventBus.dispatch('pagesinit', { source: _this });\n        if (_this.defaultRenderingQueue) {\n          _this.update();\n        }\n        if (_this.findController) {\n          _this.findController.resolveFirstPage();\n        }\n      }).catch(function (reason) {\n        console.error('Unable to initialize viewer', reason);\n      });\n    }\n  }, {\n    key: 'setPageLabels',\n    value: function setPageLabels(labels) {\n      if (!this.pdfDocument) {\n        return;\n      }\n      if (!labels) {\n        this._pageLabels = null;\n      } else if (!(labels instanceof Array && this.pdfDocument.numPages === labels.length)) {\n        this._pageLabels = null;\n        console.error('PDFViewer.setPageLabels: Invalid page labels.');\n      } else {\n        this._pageLabels = labels;\n      }\n      for (var i = 0, ii = this._pages.length; i < ii; i++) {\n        var pageView = this._pages[i];\n        var label = this._pageLabels && this._pageLabels[i];\n        pageView.setPageLabel(label);\n      }\n    }\n  }, {\n    key: '_resetView',\n    value: function _resetView() {\n      this._pages = [];\n      this._currentPageNumber = 1;\n      this._currentScale = _ui_utils.UNKNOWN_SCALE;\n      this._currentScaleValue = null;\n      this._pageLabels = null;\n      this._buffer = new PDFPageViewBuffer(DEFAULT_CACHE_SIZE);\n      this._location = null;\n      this._pagesRotation = 0;\n      this._pagesRequests = [];\n      this._pageViewsReady = false;\n      this.viewer.textContent = '';\n    }\n  }, {\n    key: '_scrollUpdate',\n    value: function _scrollUpdate() {\n      if (this.pagesCount === 0) {\n        return;\n      }\n      this.update();\n    }\n  }, {\n    key: '_setScaleDispatchEvent',\n    value: function _setScaleDispatchEvent(newScale, newValue) {\n      var preset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      var arg = {\n        source: this,\n        scale: newScale,\n        presetValue: preset ? newValue : undefined\n      };\n      this.eventBus.dispatch('scalechanging', arg);\n      this.eventBus.dispatch('scalechange', arg);\n    }\n  }, {\n    key: '_setScaleUpdatePages',\n    value: function _setScaleUpdatePages(newScale, newValue) {\n      var noScroll = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var preset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this._currentScaleValue = newValue.toString();\n      if (isSameScale(this._currentScale, newScale)) {\n        if (preset) {\n          this._setScaleDispatchEvent(newScale, newValue, true);\n        }\n        return;\n      }\n      for (var i = 0, ii = this._pages.length; i < ii; i++) {\n        this._pages[i].update(newScale);\n      }\n      this._currentScale = newScale;\n      if (!noScroll) {\n        var page = this._currentPageNumber,\n            dest = void 0;\n        if (this._location && !_pdfjsLib.PDFJS.ignoreCurrentPositionOnZoom && !(this.isInPresentationMode || this.isChangingPresentationMode)) {\n          page = this._location.pageNumber;\n          dest = [null, { name: 'XYZ' }, this._location.left, this._location.top, null];\n        }\n        this.scrollPageIntoView({\n          pageNumber: page,\n          destArray: dest,\n          allowNegativeOffset: true\n        });\n      }\n      this._setScaleDispatchEvent(newScale, newValue, preset);\n      if (this.defaultRenderingQueue) {\n        this.update();\n      }\n    }\n  }, {\n    key: '_setScale',\n    value: function _setScale(value) {\n      var noScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var scale = parseFloat(value);\n      if (scale > 0) {\n        this._setScaleUpdatePages(scale, value, noScroll, false);\n      } else {\n        var currentPage = this._pages[this._currentPageNumber - 1];\n        if (!currentPage) {\n          return;\n        }\n        var hPadding = this.isInPresentationMode || this.removePageBorders ? 0 : _ui_utils.SCROLLBAR_PADDING;\n        var vPadding = this.isInPresentationMode || this.removePageBorders ? 0 : _ui_utils.VERTICAL_PADDING;\n        var pageWidthScale = (this.container.clientWidth - hPadding) / currentPage.width * currentPage.scale;\n        var pageHeightScale = (this.container.clientHeight - vPadding) / currentPage.height * currentPage.scale;\n        switch (value) {\n          case 'page-actual':\n            scale = 1;\n            break;\n          case 'page-width':\n            scale = pageWidthScale;\n            break;\n          case 'page-height':\n            scale = pageHeightScale;\n            break;\n          case 'page-fit':\n            scale = Math.min(pageWidthScale, pageHeightScale);\n            break;\n          case 'auto':\n            var isLandscape = currentPage.width > currentPage.height;\n            var horizontalScale = isLandscape ? Math.min(pageHeightScale, pageWidthScale) : pageWidthScale;\n            scale = Math.min(_ui_utils.MAX_AUTO_SCALE, horizontalScale);\n            break;\n          default:\n            console.error('PDFViewer._setScale: \"' + value + '\" is an unknown zoom value.');\n            return;\n        }\n        this._setScaleUpdatePages(scale, value, noScroll, true);\n      }\n    }\n  }, {\n    key: '_resetCurrentPageView',\n    value: function _resetCurrentPageView() {\n      if (this.isInPresentationMode) {\n        this._setScale(this._currentScaleValue, true);\n      }\n      var pageView = this._pages[this._currentPageNumber - 1];\n      (0, _ui_utils.scrollIntoView)(pageView.div);\n    }\n  }, {\n    key: 'scrollPageIntoView',\n    value: function scrollPageIntoView(params) {\n      if (arguments.length > 1 || typeof params === 'number') {\n        console.error('Call of scrollPageIntoView() with obsolete signature.');\n        return;\n      }\n      if (!this.pdfDocument) {\n        return;\n      }\n      var pageNumber = params.pageNumber || 0;\n      var dest = params.destArray || null;\n      var allowNegativeOffset = params.allowNegativeOffset || false;\n      if (this.isInPresentationMode || !dest) {\n        this._setCurrentPageNumber(pageNumber, true);\n        return;\n      }\n      var pageView = this._pages[pageNumber - 1];\n      if (!pageView) {\n        console.error('PDFViewer.scrollPageIntoView: Invalid \"pageNumber\" parameter.');\n        return;\n      }\n      var x = 0,\n          y = 0;\n      var width = 0,\n          height = 0,\n          widthScale = void 0,\n          heightScale = void 0;\n      var changeOrientation = pageView.rotation % 180 === 0 ? false : true;\n      var pageWidth = (changeOrientation ? pageView.height : pageView.width) / pageView.scale / _ui_utils.CSS_UNITS;\n      var pageHeight = (changeOrientation ? pageView.width : pageView.height) / pageView.scale / _ui_utils.CSS_UNITS;\n      var scale = 0;\n      switch (dest[1].name) {\n        case 'XYZ':\n          x = dest[2];\n          y = dest[3];\n          scale = dest[4];\n          x = x !== null ? x : 0;\n          y = y !== null ? y : pageHeight;\n          break;\n        case 'Fit':\n        case 'FitB':\n          scale = 'page-fit';\n          break;\n        case 'FitH':\n        case 'FitBH':\n          y = dest[2];\n          scale = 'page-width';\n          if (y === null && this._location) {\n            x = this._location.left;\n            y = this._location.top;\n          }\n          break;\n        case 'FitV':\n        case 'FitBV':\n          x = dest[2];\n          width = pageWidth;\n          height = pageHeight;\n          scale = 'page-height';\n          break;\n        case 'FitR':\n          x = dest[2];\n          y = dest[3];\n          width = dest[4] - x;\n          height = dest[5] - y;\n          var hPadding = this.removePageBorders ? 0 : _ui_utils.SCROLLBAR_PADDING;\n          var vPadding = this.removePageBorders ? 0 : _ui_utils.VERTICAL_PADDING;\n          widthScale = (this.container.clientWidth - hPadding) / width / _ui_utils.CSS_UNITS;\n          heightScale = (this.container.clientHeight - vPadding) / height / _ui_utils.CSS_UNITS;\n          scale = Math.min(Math.abs(widthScale), Math.abs(heightScale));\n          break;\n        default:\n          console.error('PDFViewer.scrollPageIntoView: \"' + dest[1].name + '\" ' + 'is not a valid destination type.');\n          return;\n      }\n      if (scale && scale !== this._currentScale) {\n        this.currentScaleValue = scale;\n      } else if (this._currentScale === _ui_utils.UNKNOWN_SCALE) {\n        this.currentScaleValue = _ui_utils.DEFAULT_SCALE_VALUE;\n      }\n      if (scale === 'page-fit' && !dest[4]) {\n        (0, _ui_utils.scrollIntoView)(pageView.div);\n        return;\n      }\n      var boundingRect = [pageView.viewport.convertToViewportPoint(x, y), pageView.viewport.convertToViewportPoint(x + width, y + height)];\n      var left = Math.min(boundingRect[0][0], boundingRect[1][0]);\n      var top = Math.min(boundingRect[0][1], boundingRect[1][1]);\n      if (!allowNegativeOffset) {\n        left = Math.max(left, 0);\n        top = Math.max(top, 0);\n      }\n      (0, _ui_utils.scrollIntoView)(pageView.div, {\n        left: left,\n        top: top\n      });\n    }\n  }, {\n    key: '_updateLocation',\n    value: function _updateLocation(firstPage) {\n      var currentScale = this._currentScale;\n      var currentScaleValue = this._currentScaleValue;\n      var normalizedScaleValue = parseFloat(currentScaleValue) === currentScale ? Math.round(currentScale * 10000) / 100 : currentScaleValue;\n      var pageNumber = firstPage.id;\n      var pdfOpenParams = '#page=' + pageNumber;\n      pdfOpenParams += '&zoom=' + normalizedScaleValue;\n      var currentPageView = this._pages[pageNumber - 1];\n      var container = this.container;\n      var topLeft = currentPageView.getPagePoint(container.scrollLeft - firstPage.x, container.scrollTop - firstPage.y);\n      var intLeft = Math.round(topLeft[0]);\n      var intTop = Math.round(topLeft[1]);\n      pdfOpenParams += ',' + intLeft + ',' + intTop;\n      this._location = {\n        pageNumber: pageNumber,\n        scale: normalizedScaleValue,\n        top: intTop,\n        left: intLeft,\n        pdfOpenParams: pdfOpenParams\n      };\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      var visible = this._getVisiblePages();\n      var visiblePages = visible.views;\n      if (visiblePages.length === 0) {\n        return;\n      }\n      var suggestedCacheSize = Math.max(DEFAULT_CACHE_SIZE, 2 * visiblePages.length + 1);\n      this._buffer.resize(suggestedCacheSize);\n      this.renderingQueue.renderHighestPriority(visible);\n      var currentId = this._currentPageNumber;\n      var firstPage = visible.first;\n      var stillFullyVisible = false;\n      for (var i = 0, ii = visiblePages.length; i < ii; ++i) {\n        var page = visiblePages[i];\n        if (page.percent < 100) {\n          break;\n        }\n        if (page.id === currentId) {\n          stillFullyVisible = true;\n          break;\n        }\n      }\n      if (!stillFullyVisible) {\n        currentId = visiblePages[0].id;\n      }\n      if (!this.isInPresentationMode) {\n        this._setCurrentPageNumber(currentId);\n      }\n      this._updateLocation(firstPage);\n      this.eventBus.dispatch('updateviewarea', {\n        source: this,\n        location: this._location\n      });\n    }\n  }, {\n    key: 'containsElement',\n    value: function containsElement(element) {\n      return this.container.contains(element);\n    }\n  }, {\n    key: 'focus',\n    value: function focus() {\n      this.container.focus();\n    }\n  }, {\n    key: '_getVisiblePages',\n    value: function _getVisiblePages() {\n      if (!this.isInPresentationMode) {\n        return (0, _ui_utils.getVisibleElements)(this.container, this._pages, true);\n      }\n      var visible = [];\n      var currentPage = this._pages[this._currentPageNumber - 1];\n      visible.push({\n        id: currentPage.id,\n        view: currentPage\n      });\n      return {\n        first: currentPage,\n        last: currentPage,\n        views: visible\n      };\n    }\n  }, {\n    key: 'cleanup',\n    value: function cleanup() {\n      for (var i = 0, ii = this._pages.length; i < ii; i++) {\n        if (this._pages[i] && this._pages[i].renderingState !== _pdf_rendering_queue.RenderingStates.FINISHED) {\n          this._pages[i].reset();\n        }\n      }\n    }\n  }, {\n    key: '_cancelRendering',\n    value: function _cancelRendering() {\n      for (var i = 0, ii = this._pages.length; i < ii; i++) {\n        if (this._pages[i]) {\n          this._pages[i].cancelRendering();\n        }\n      }\n    }\n  }, {\n    key: '_ensurePdfPageLoaded',\n    value: function _ensurePdfPageLoaded(pageView) {\n      var _this2 = this;\n\n      if (pageView.pdfPage) {\n        return Promise.resolve(pageView.pdfPage);\n      }\n      var pageNumber = pageView.id;\n      if (this._pagesRequests[pageNumber]) {\n        return this._pagesRequests[pageNumber];\n      }\n      var promise = this.pdfDocument.getPage(pageNumber).then(function (pdfPage) {\n        if (!pageView.pdfPage) {\n          pageView.setPdfPage(pdfPage);\n        }\n        _this2._pagesRequests[pageNumber] = null;\n        return pdfPage;\n      }).catch(function (reason) {\n        console.error('Unable to get page for page view', reason);\n        _this2._pagesRequests[pageNumber] = null;\n      });\n      this._pagesRequests[pageNumber] = promise;\n      return promise;\n    }\n  }, {\n    key: 'forceRendering',\n    value: function forceRendering(currentlyVisiblePages) {\n      var _this3 = this;\n\n      var visiblePages = currentlyVisiblePages || this._getVisiblePages();\n      var pageView = this.renderingQueue.getHighestPriority(visiblePages, this._pages, this.scroll.down);\n      if (pageView) {\n        this._ensurePdfPageLoaded(pageView).then(function () {\n          _this3.renderingQueue.renderView(pageView);\n        });\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: 'getPageTextContent',\n    value: function getPageTextContent(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex + 1).then(function (page) {\n        return page.getTextContent({ normalizeWhitespace: true });\n      });\n    }\n  }, {\n    key: 'createTextLayerBuilder',\n    value: function createTextLayerBuilder(textLayerDiv, pageIndex, viewport) {\n      var enhanceTextSelection = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      return new _text_layer_builder.TextLayerBuilder({\n        textLayerDiv: textLayerDiv,\n        eventBus: this.eventBus,\n        pageIndex: pageIndex,\n        viewport: viewport,\n        findController: this.isInPresentationMode ? null : this.findController,\n        enhanceTextSelection: this.isInPresentationMode ? false : enhanceTextSelection\n      });\n    }\n  }, {\n    key: 'createAnnotationLayerBuilder',\n    value: function createAnnotationLayerBuilder(pageDiv, pdfPage) {\n      var renderInteractiveForms = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var l10n = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _ui_utils.NullL10n;\n\n      return new _annotation_layer_builder.AnnotationLayerBuilder({\n        pageDiv: pageDiv,\n        pdfPage: pdfPage,\n        renderInteractiveForms: renderInteractiveForms,\n        linkService: this.linkService,\n        downloadManager: this.downloadManager,\n        l10n: l10n\n      });\n    }\n  }, {\n    key: 'setFindController',\n    value: function setFindController(findController) {\n      this.findController = findController;\n    }\n  }, {\n    key: 'getPagesOverview',\n    value: function getPagesOverview() {\n      var pagesOverview = this._pages.map(function (pageView) {\n        var viewport = pageView.pdfPage.getViewport(1);\n        return {\n          width: viewport.width,\n          height: viewport.height,\n          rotation: viewport.rotation\n        };\n      });\n      if (!this.enablePrintAutoRotate) {\n        return pagesOverview;\n      }\n      var isFirstPagePortrait = isPortraitOrientation(pagesOverview[0]);\n      return pagesOverview.map(function (size) {\n        if (isFirstPagePortrait === isPortraitOrientation(size)) {\n          return size;\n        }\n        return {\n          width: size.height,\n          height: size.width,\n          rotation: (size.rotation + 90) % 360\n        };\n      });\n    }\n  }, {\n    key: 'pagesCount',\n    get: function get() {\n      return this._pages.length;\n    }\n  }, {\n    key: 'pageViewsReady',\n    get: function get() {\n      return this._pageViewsReady;\n    }\n  }, {\n    key: 'currentPageNumber',\n    get: function get() {\n      return this._currentPageNumber;\n    },\n    set: function set(val) {\n      if ((val | 0) !== val) {\n        throw new Error('Invalid page number.');\n      }\n      if (!this.pdfDocument) {\n        return;\n      }\n      this._setCurrentPageNumber(val, true);\n    }\n  }, {\n    key: 'currentPageLabel',\n    get: function get() {\n      return this._pageLabels && this._pageLabels[this._currentPageNumber - 1];\n    },\n    set: function set(val) {\n      var pageNumber = val | 0;\n      if (this._pageLabels) {\n        var i = this._pageLabels.indexOf(val);\n        if (i >= 0) {\n          pageNumber = i + 1;\n        }\n      }\n      this.currentPageNumber = pageNumber;\n    }\n  }, {\n    key: 'currentScale',\n    get: function get() {\n      return this._currentScale !== _ui_utils.UNKNOWN_SCALE ? this._currentScale : _ui_utils.DEFAULT_SCALE;\n    },\n    set: function set(val) {\n      if (isNaN(val)) {\n        throw new Error('Invalid numeric scale');\n      }\n      if (!this.pdfDocument) {\n        return;\n      }\n      this._setScale(val, false);\n    }\n  }, {\n    key: 'currentScaleValue',\n    get: function get() {\n      return this._currentScaleValue;\n    },\n    set: function set(val) {\n      if (!this.pdfDocument) {\n        return;\n      }\n      this._setScale(val, false);\n    }\n  }, {\n    key: 'pagesRotation',\n    get: function get() {\n      return this._pagesRotation;\n    },\n    set: function set(rotation) {\n      if (!(typeof rotation === 'number' && rotation % 90 === 0)) {\n        throw new Error('Invalid pages rotation angle.');\n      }\n      if (!this.pdfDocument) {\n        return;\n      }\n      this._pagesRotation = rotation;\n      for (var i = 0, ii = this._pages.length; i < ii; i++) {\n        var pageView = this._pages[i];\n        pageView.update(pageView.scale, rotation);\n      }\n      this._setScale(this._currentScaleValue, true);\n      if (this.defaultRenderingQueue) {\n        this.update();\n      }\n    }\n  }, {\n    key: 'isInPresentationMode',\n    get: function get() {\n      return this.presentationModeState === PresentationModeState.FULLSCREEN;\n    }\n  }, {\n    key: 'isChangingPresentationMode',\n    get: function get() {\n      return this.presentationModeState === PresentationModeState.CHANGING;\n    }\n  }, {\n    key: 'isHorizontalScrollbarEnabled',\n    get: function get() {\n      return this.isInPresentationMode ? false : this.container.scrollWidth > this.container.clientWidth;\n    }\n  }, {\n    key: 'hasEqualPageSizes',\n    get: function get() {\n      var firstPageView = this._pages[0];\n      for (var i = 1, ii = this._pages.length; i < ii; ++i) {\n        var pageView = this._pages[i];\n        if (pageView.width !== firstPageView.width || pageView.height !== firstPageView.height) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }]);\n\n  return PDFViewer;\n}();\n\nexports.PresentationModeState = PresentationModeState;\nexports.PDFViewer = PDFViewer;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\ndocument.webL10n = function (window, document, undefined) {\n  var gL10nData = {};\n  var gTextData = '';\n  var gTextProp = 'textContent';\n  var gLanguage = '';\n  var gMacros = {};\n  var gReadyState = 'loading';\n  var gAsyncResourceLoading = true;\n  function getL10nResourceLinks() {\n    return document.querySelectorAll('link[type=\"application/l10n\"]');\n  }\n  function getL10nDictionary() {\n    var script = document.querySelector('script[type=\"application/l10n\"]');\n    return script ? JSON.parse(script.innerHTML) : null;\n  }\n  function getTranslatableChildren(element) {\n    return element ? element.querySelectorAll('*[data-l10n-id]') : [];\n  }\n  function getL10nAttributes(element) {\n    if (!element) return {};\n    var l10nId = element.getAttribute('data-l10n-id');\n    var l10nArgs = element.getAttribute('data-l10n-args');\n    var args = {};\n    if (l10nArgs) {\n      try {\n        args = JSON.parse(l10nArgs);\n      } catch (e) {\n        console.warn('could not parse arguments for #' + l10nId);\n      }\n    }\n    return {\n      id: l10nId,\n      args: args\n    };\n  }\n  function fireL10nReadyEvent(lang) {\n    var evtObject = document.createEvent('Event');\n    evtObject.initEvent('localized', true, false);\n    evtObject.language = lang;\n    document.dispatchEvent(evtObject);\n  }\n  function xhrLoadText(url, onSuccess, onFailure) {\n    onSuccess = onSuccess || function _onSuccess(data) {};\n    onFailure = onFailure || function _onFailure() {};\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, gAsyncResourceLoading);\n    if (xhr.overrideMimeType) {\n      xhr.overrideMimeType('text/plain; charset=utf-8');\n    }\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState == 4) {\n        if (xhr.status == 200 || xhr.status === 0) {\n          onSuccess(xhr.responseText);\n        } else {\n          onFailure();\n        }\n      }\n    };\n    xhr.onerror = onFailure;\n    xhr.ontimeout = onFailure;\n    try {\n      xhr.send(null);\n    } catch (e) {\n      onFailure();\n    }\n  }\n  function parseResource(href, lang, successCallback, failureCallback) {\n    var baseURL = href.replace(/[^\\/]*$/, '') || './';\n    function evalString(text) {\n      if (text.lastIndexOf('\\\\') < 0) return text;\n      return text.replace(/\\\\\\\\/g, '\\\\').replace(/\\\\n/g, '\\n').replace(/\\\\r/g, '\\r').replace(/\\\\t/g, '\\t').replace(/\\\\b/g, '\\b').replace(/\\\\f/g, '\\f').replace(/\\\\{/g, '{').replace(/\\\\}/g, '}').replace(/\\\\\"/g, '\"').replace(/\\\\'/g, \"'\");\n    }\n    function parseProperties(text, parsedPropertiesCallback) {\n      var dictionary = {};\n      var reBlank = /^\\s*|\\s*$/;\n      var reComment = /^\\s*#|^\\s*$/;\n      var reSection = /^\\s*\\[(.*)\\]\\s*$/;\n      var reImport = /^\\s*@import\\s+url\\((.*)\\)\\s*$/i;\n      var reSplit = /^([^=\\s]*)\\s*=\\s*(.+)$/;\n      function parseRawLines(rawText, extendedSyntax, parsedRawLinesCallback) {\n        var entries = rawText.replace(reBlank, '').split(/[\\r\\n]+/);\n        var currentLang = '*';\n        var genericLang = lang.split('-', 1)[0];\n        var skipLang = false;\n        var match = '';\n        function nextEntry() {\n          while (true) {\n            if (!entries.length) {\n              parsedRawLinesCallback();\n              return;\n            }\n            var line = entries.shift();\n            if (reComment.test(line)) continue;\n            if (extendedSyntax) {\n              match = reSection.exec(line);\n              if (match) {\n                currentLang = match[1].toLowerCase();\n                skipLang = currentLang !== '*' && currentLang !== lang && currentLang !== genericLang;\n                continue;\n              } else if (skipLang) {\n                continue;\n              }\n              match = reImport.exec(line);\n              if (match) {\n                loadImport(baseURL + match[1], nextEntry);\n                return;\n              }\n            }\n            var tmp = line.match(reSplit);\n            if (tmp && tmp.length == 3) {\n              dictionary[tmp[1]] = evalString(tmp[2]);\n            }\n          }\n        }\n        nextEntry();\n      }\n      function loadImport(url, callback) {\n        xhrLoadText(url, function (content) {\n          parseRawLines(content, false, callback);\n        }, function () {\n          console.warn(url + ' not found.');\n          callback();\n        });\n      }\n      parseRawLines(text, true, function () {\n        parsedPropertiesCallback(dictionary);\n      });\n    }\n    xhrLoadText(href, function (response) {\n      gTextData += response;\n      parseProperties(response, function (data) {\n        for (var key in data) {\n          var id,\n              prop,\n              index = key.lastIndexOf('.');\n          if (index > 0) {\n            id = key.substring(0, index);\n            prop = key.substr(index + 1);\n          } else {\n            id = key;\n            prop = gTextProp;\n          }\n          if (!gL10nData[id]) {\n            gL10nData[id] = {};\n          }\n          gL10nData[id][prop] = data[key];\n        }\n        if (successCallback) {\n          successCallback();\n        }\n      });\n    }, failureCallback);\n  }\n  function loadLocale(lang, callback) {\n    if (lang) {\n      lang = lang.toLowerCase();\n    }\n    callback = callback || function _callback() {};\n    clear();\n    gLanguage = lang;\n    var langLinks = getL10nResourceLinks();\n    var langCount = langLinks.length;\n    if (langCount === 0) {\n      var dict = getL10nDictionary();\n      if (dict && dict.locales && dict.default_locale) {\n        console.log('using the embedded JSON directory, early way out');\n        gL10nData = dict.locales[lang];\n        if (!gL10nData) {\n          var defaultLocale = dict.default_locale.toLowerCase();\n          for (var anyCaseLang in dict.locales) {\n            anyCaseLang = anyCaseLang.toLowerCase();\n            if (anyCaseLang === lang) {\n              gL10nData = dict.locales[lang];\n              break;\n            } else if (anyCaseLang === defaultLocale) {\n              gL10nData = dict.locales[defaultLocale];\n            }\n          }\n        }\n        callback();\n      } else {\n        console.log('no resource to load, early way out');\n      }\n      fireL10nReadyEvent(lang);\n      gReadyState = 'complete';\n      return;\n    }\n    var onResourceLoaded = null;\n    var gResourceCount = 0;\n    onResourceLoaded = function onResourceLoaded() {\n      gResourceCount++;\n      if (gResourceCount >= langCount) {\n        callback();\n        fireL10nReadyEvent(lang);\n        gReadyState = 'complete';\n      }\n    };\n    function L10nResourceLink(link) {\n      var href = link.href;\n      this.load = function (lang, callback) {\n        parseResource(href, lang, callback, function () {\n          console.warn(href + ' not found.');\n          console.warn('\"' + lang + '\" resource not found');\n          gLanguage = '';\n          callback();\n        });\n      };\n    }\n    for (var i = 0; i < langCount; i++) {\n      var resource = new L10nResourceLink(langLinks[i]);\n      resource.load(lang, onResourceLoaded);\n    }\n  }\n  function clear() {\n    gL10nData = {};\n    gTextData = '';\n    gLanguage = '';\n  }\n  function getPluralRules(lang) {\n    var locales2rules = {\n      'af': 3,\n      'ak': 4,\n      'am': 4,\n      'ar': 1,\n      'asa': 3,\n      'az': 0,\n      'be': 11,\n      'bem': 3,\n      'bez': 3,\n      'bg': 3,\n      'bh': 4,\n      'bm': 0,\n      'bn': 3,\n      'bo': 0,\n      'br': 20,\n      'brx': 3,\n      'bs': 11,\n      'ca': 3,\n      'cgg': 3,\n      'chr': 3,\n      'cs': 12,\n      'cy': 17,\n      'da': 3,\n      'de': 3,\n      'dv': 3,\n      'dz': 0,\n      'ee': 3,\n      'el': 3,\n      'en': 3,\n      'eo': 3,\n      'es': 3,\n      'et': 3,\n      'eu': 3,\n      'fa': 0,\n      'ff': 5,\n      'fi': 3,\n      'fil': 4,\n      'fo': 3,\n      'fr': 5,\n      'fur': 3,\n      'fy': 3,\n      'ga': 8,\n      'gd': 24,\n      'gl': 3,\n      'gsw': 3,\n      'gu': 3,\n      'guw': 4,\n      'gv': 23,\n      'ha': 3,\n      'haw': 3,\n      'he': 2,\n      'hi': 4,\n      'hr': 11,\n      'hu': 0,\n      'id': 0,\n      'ig': 0,\n      'ii': 0,\n      'is': 3,\n      'it': 3,\n      'iu': 7,\n      'ja': 0,\n      'jmc': 3,\n      'jv': 0,\n      'ka': 0,\n      'kab': 5,\n      'kaj': 3,\n      'kcg': 3,\n      'kde': 0,\n      'kea': 0,\n      'kk': 3,\n      'kl': 3,\n      'km': 0,\n      'kn': 0,\n      'ko': 0,\n      'ksb': 3,\n      'ksh': 21,\n      'ku': 3,\n      'kw': 7,\n      'lag': 18,\n      'lb': 3,\n      'lg': 3,\n      'ln': 4,\n      'lo': 0,\n      'lt': 10,\n      'lv': 6,\n      'mas': 3,\n      'mg': 4,\n      'mk': 16,\n      'ml': 3,\n      'mn': 3,\n      'mo': 9,\n      'mr': 3,\n      'ms': 0,\n      'mt': 15,\n      'my': 0,\n      'nah': 3,\n      'naq': 7,\n      'nb': 3,\n      'nd': 3,\n      'ne': 3,\n      'nl': 3,\n      'nn': 3,\n      'no': 3,\n      'nr': 3,\n      'nso': 4,\n      'ny': 3,\n      'nyn': 3,\n      'om': 3,\n      'or': 3,\n      'pa': 3,\n      'pap': 3,\n      'pl': 13,\n      'ps': 3,\n      'pt': 3,\n      'rm': 3,\n      'ro': 9,\n      'rof': 3,\n      'ru': 11,\n      'rwk': 3,\n      'sah': 0,\n      'saq': 3,\n      'se': 7,\n      'seh': 3,\n      'ses': 0,\n      'sg': 0,\n      'sh': 11,\n      'shi': 19,\n      'sk': 12,\n      'sl': 14,\n      'sma': 7,\n      'smi': 7,\n      'smj': 7,\n      'smn': 7,\n      'sms': 7,\n      'sn': 3,\n      'so': 3,\n      'sq': 3,\n      'sr': 11,\n      'ss': 3,\n      'ssy': 3,\n      'st': 3,\n      'sv': 3,\n      'sw': 3,\n      'syr': 3,\n      'ta': 3,\n      'te': 3,\n      'teo': 3,\n      'th': 0,\n      'ti': 4,\n      'tig': 3,\n      'tk': 3,\n      'tl': 4,\n      'tn': 3,\n      'to': 0,\n      'tr': 0,\n      'ts': 3,\n      'tzm': 22,\n      'uk': 11,\n      'ur': 3,\n      've': 3,\n      'vi': 0,\n      'vun': 3,\n      'wa': 4,\n      'wae': 3,\n      'wo': 0,\n      'xh': 3,\n      'xog': 3,\n      'yo': 0,\n      'zh': 0,\n      'zu': 3\n    };\n    function isIn(n, list) {\n      return list.indexOf(n) !== -1;\n    }\n    function isBetween(n, start, end) {\n      return start <= n && n <= end;\n    }\n    var pluralRules = {\n      '0': function _(n) {\n        return 'other';\n      },\n      '1': function _(n) {\n        if (isBetween(n % 100, 3, 10)) return 'few';\n        if (n === 0) return 'zero';\n        if (isBetween(n % 100, 11, 99)) return 'many';\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '2': function _(n) {\n        if (n !== 0 && n % 10 === 0) return 'many';\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '3': function _(n) {\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '4': function _(n) {\n        if (isBetween(n, 0, 1)) return 'one';\n        return 'other';\n      },\n      '5': function _(n) {\n        if (isBetween(n, 0, 2) && n != 2) return 'one';\n        return 'other';\n      },\n      '6': function _(n) {\n        if (n === 0) return 'zero';\n        if (n % 10 == 1 && n % 100 != 11) return 'one';\n        return 'other';\n      },\n      '7': function _(n) {\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '8': function _(n) {\n        if (isBetween(n, 3, 6)) return 'few';\n        if (isBetween(n, 7, 10)) return 'many';\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '9': function _(n) {\n        if (n === 0 || n != 1 && isBetween(n % 100, 1, 19)) return 'few';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '10': function _(n) {\n        if (isBetween(n % 10, 2, 9) && !isBetween(n % 100, 11, 19)) return 'few';\n        if (n % 10 == 1 && !isBetween(n % 100, 11, 19)) return 'one';\n        return 'other';\n      },\n      '11': function _(n) {\n        if (isBetween(n % 10, 2, 4) && !isBetween(n % 100, 12, 14)) return 'few';\n        if (n % 10 === 0 || isBetween(n % 10, 5, 9) || isBetween(n % 100, 11, 14)) return 'many';\n        if (n % 10 == 1 && n % 100 != 11) return 'one';\n        return 'other';\n      },\n      '12': function _(n) {\n        if (isBetween(n, 2, 4)) return 'few';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '13': function _(n) {\n        if (isBetween(n % 10, 2, 4) && !isBetween(n % 100, 12, 14)) return 'few';\n        if (n != 1 && isBetween(n % 10, 0, 1) || isBetween(n % 10, 5, 9) || isBetween(n % 100, 12, 14)) return 'many';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '14': function _(n) {\n        if (isBetween(n % 100, 3, 4)) return 'few';\n        if (n % 100 == 2) return 'two';\n        if (n % 100 == 1) return 'one';\n        return 'other';\n      },\n      '15': function _(n) {\n        if (n === 0 || isBetween(n % 100, 2, 10)) return 'few';\n        if (isBetween(n % 100, 11, 19)) return 'many';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '16': function _(n) {\n        if (n % 10 == 1 && n != 11) return 'one';\n        return 'other';\n      },\n      '17': function _(n) {\n        if (n == 3) return 'few';\n        if (n === 0) return 'zero';\n        if (n == 6) return 'many';\n        if (n == 2) return 'two';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '18': function _(n) {\n        if (n === 0) return 'zero';\n        if (isBetween(n, 0, 2) && n !== 0 && n != 2) return 'one';\n        return 'other';\n      },\n      '19': function _(n) {\n        if (isBetween(n, 2, 10)) return 'few';\n        if (isBetween(n, 0, 1)) return 'one';\n        return 'other';\n      },\n      '20': function _(n) {\n        if ((isBetween(n % 10, 3, 4) || n % 10 == 9) && !(isBetween(n % 100, 10, 19) || isBetween(n % 100, 70, 79) || isBetween(n % 100, 90, 99))) return 'few';\n        if (n % 1000000 === 0 && n !== 0) return 'many';\n        if (n % 10 == 2 && !isIn(n % 100, [12, 72, 92])) return 'two';\n        if (n % 10 == 1 && !isIn(n % 100, [11, 71, 91])) return 'one';\n        return 'other';\n      },\n      '21': function _(n) {\n        if (n === 0) return 'zero';\n        if (n == 1) return 'one';\n        return 'other';\n      },\n      '22': function _(n) {\n        if (isBetween(n, 0, 1) || isBetween(n, 11, 99)) return 'one';\n        return 'other';\n      },\n      '23': function _(n) {\n        if (isBetween(n % 10, 1, 2) || n % 20 === 0) return 'one';\n        return 'other';\n      },\n      '24': function _(n) {\n        if (isBetween(n, 3, 10) || isBetween(n, 13, 19)) return 'few';\n        if (isIn(n, [2, 12])) return 'two';\n        if (isIn(n, [1, 11])) return 'one';\n        return 'other';\n      }\n    };\n    var index = locales2rules[lang.replace(/-.*$/, '')];\n    if (!(index in pluralRules)) {\n      console.warn('plural form unknown for [' + lang + ']');\n      return function () {\n        return 'other';\n      };\n    }\n    return pluralRules[index];\n  }\n  gMacros.plural = function (str, param, key, prop) {\n    var n = parseFloat(param);\n    if (isNaN(n)) return str;\n    if (prop != gTextProp) return str;\n    if (!gMacros._pluralRules) {\n      gMacros._pluralRules = getPluralRules(gLanguage);\n    }\n    var index = '[' + gMacros._pluralRules(n) + ']';\n    if (n === 0 && key + '[zero]' in gL10nData) {\n      str = gL10nData[key + '[zero]'][prop];\n    } else if (n == 1 && key + '[one]' in gL10nData) {\n      str = gL10nData[key + '[one]'][prop];\n    } else if (n == 2 && key + '[two]' in gL10nData) {\n      str = gL10nData[key + '[two]'][prop];\n    } else if (key + index in gL10nData) {\n      str = gL10nData[key + index][prop];\n    } else if (key + '[other]' in gL10nData) {\n      str = gL10nData[key + '[other]'][prop];\n    }\n    return str;\n  };\n  function getL10nData(key, args, fallback) {\n    var data = gL10nData[key];\n    if (!data) {\n      console.warn('#' + key + ' is undefined.');\n      if (!fallback) {\n        return null;\n      }\n      data = fallback;\n    }\n    var rv = {};\n    for (var prop in data) {\n      var str = data[prop];\n      str = substIndexes(str, args, key, prop);\n      str = substArguments(str, args, key);\n      rv[prop] = str;\n    }\n    return rv;\n  }\n  function substIndexes(str, args, key, prop) {\n    var reIndex = /\\{\\[\\s*([a-zA-Z]+)\\(([a-zA-Z]+)\\)\\s*\\]\\}/;\n    var reMatch = reIndex.exec(str);\n    if (!reMatch || !reMatch.length) return str;\n    var macroName = reMatch[1];\n    var paramName = reMatch[2];\n    var param;\n    if (args && paramName in args) {\n      param = args[paramName];\n    } else if (paramName in gL10nData) {\n      param = gL10nData[paramName];\n    }\n    if (macroName in gMacros) {\n      var macro = gMacros[macroName];\n      str = macro(str, param, key, prop);\n    }\n    return str;\n  }\n  function substArguments(str, args, key) {\n    var reArgs = /\\{\\{\\s*(.+?)\\s*\\}\\}/g;\n    return str.replace(reArgs, function (matched_text, arg) {\n      if (args && arg in args) {\n        return args[arg];\n      }\n      if (arg in gL10nData) {\n        return gL10nData[arg];\n      }\n      console.log('argument {{' + arg + '}} for #' + key + ' is undefined.');\n      return matched_text;\n    });\n  }\n  function translateElement(element) {\n    var l10n = getL10nAttributes(element);\n    if (!l10n.id) return;\n    var data = getL10nData(l10n.id, l10n.args);\n    if (!data) {\n      console.warn('#' + l10n.id + ' is undefined.');\n      return;\n    }\n    if (data[gTextProp]) {\n      if (getChildElementCount(element) === 0) {\n        element[gTextProp] = data[gTextProp];\n      } else {\n        var children = element.childNodes;\n        var found = false;\n        for (var i = 0, l = children.length; i < l; i++) {\n          if (children[i].nodeType === 3 && /\\S/.test(children[i].nodeValue)) {\n            if (found) {\n              children[i].nodeValue = '';\n            } else {\n              children[i].nodeValue = data[gTextProp];\n              found = true;\n            }\n          }\n        }\n        if (!found) {\n          var textNode = document.createTextNode(data[gTextProp]);\n          element.insertBefore(textNode, element.firstChild);\n        }\n      }\n      delete data[gTextProp];\n    }\n    for (var k in data) {\n      element[k] = data[k];\n    }\n  }\n  function getChildElementCount(element) {\n    if (element.children) {\n      return element.children.length;\n    }\n    if (typeof element.childElementCount !== 'undefined') {\n      return element.childElementCount;\n    }\n    var count = 0;\n    for (var i = 0; i < element.childNodes.length; i++) {\n      count += element.nodeType === 1 ? 1 : 0;\n    }\n    return count;\n  }\n  function translateFragment(element) {\n    element = element || document.documentElement;\n    var children = getTranslatableChildren(element);\n    var elementCount = children.length;\n    for (var i = 0; i < elementCount; i++) {\n      translateElement(children[i]);\n    }\n    translateElement(element);\n  }\n  return {\n    get: function get(key, args, fallbackString) {\n      var index = key.lastIndexOf('.');\n      var prop = gTextProp;\n      if (index > 0) {\n        prop = key.substr(index + 1);\n        key = key.substring(0, index);\n      }\n      var fallback;\n      if (fallbackString) {\n        fallback = {};\n        fallback[prop] = fallbackString;\n      }\n      var data = getL10nData(key, args, fallback);\n      if (data && prop in data) {\n        return data[prop];\n      }\n      return '{{' + key + '}}';\n    },\n    getData: function getData() {\n      return gL10nData;\n    },\n    getText: function getText() {\n      return gTextData;\n    },\n    getLanguage: function getLanguage() {\n      return gLanguage;\n    },\n    setLanguage: function setLanguage(lang, callback) {\n      loadLocale(lang, function () {\n        if (callback) callback();\n      });\n    },\n    getDirection: function getDirection() {\n      var rtlList = ['ar', 'he', 'fa', 'ps', 'ur'];\n      var shortCode = gLanguage.split('-', 1)[0];\n      return rtlList.indexOf(shortCode) >= 0 ? 'rtl' : 'ltr';\n    },\n    translate: translateFragment,\n    getReadyState: function getReadyState() {\n      return gReadyState;\n    },\n    ready: function ready(callback) {\n      if (!callback) {\n        return;\n      } else if (gReadyState == 'complete' || gReadyState == 'interactive') {\n        window.setTimeout(function () {\n          callback();\n        });\n      } else if (document.addEventListener) {\n        document.addEventListener('localized', function once() {\n          document.removeEventListener('localized', once);\n          callback();\n        });\n      }\n    }\n  };\n}(window, document);\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pdfjsLib = __w_pdfjs_require__(0);\nvar pdfjsWebPDFViewer = __w_pdfjs_require__(12);\nvar pdfjsWebPDFPageView = __w_pdfjs_require__(5);\nvar pdfjsWebPDFLinkService = __w_pdfjs_require__(3);\nvar pdfjsWebTextLayerBuilder = __w_pdfjs_require__(6);\nvar pdfjsWebAnnotationLayerBuilder = __w_pdfjs_require__(4);\nvar pdfjsWebPDFHistory = __w_pdfjs_require__(11);\nvar pdfjsWebPDFFindController = __w_pdfjs_require__(10);\nvar pdfjsWebUIUtils = __w_pdfjs_require__(1);\nvar pdfjsWebDownloadManager = __w_pdfjs_require__(8);\nvar pdfjsWebGenericL10n = __w_pdfjs_require__(9);\nvar PDFJS = pdfjsLib.PDFJS;\nPDFJS.PDFViewer = pdfjsWebPDFViewer.PDFViewer;\nPDFJS.PDFPageView = pdfjsWebPDFPageView.PDFPageView;\nPDFJS.PDFLinkService = pdfjsWebPDFLinkService.PDFLinkService;\nPDFJS.TextLayerBuilder = pdfjsWebTextLayerBuilder.TextLayerBuilder;\nPDFJS.DefaultTextLayerFactory = pdfjsWebTextLayerBuilder.DefaultTextLayerFactory;\nPDFJS.AnnotationLayerBuilder = pdfjsWebAnnotationLayerBuilder.AnnotationLayerBuilder;\nPDFJS.DefaultAnnotationLayerFactory = pdfjsWebAnnotationLayerBuilder.DefaultAnnotationLayerFactory;\nPDFJS.PDFHistory = pdfjsWebPDFHistory.PDFHistory;\nPDFJS.PDFFindController = pdfjsWebPDFFindController.PDFFindController;\nPDFJS.EventBus = pdfjsWebUIUtils.EventBus;\nPDFJS.DownloadManager = pdfjsWebDownloadManager.DownloadManager;\nPDFJS.ProgressBar = pdfjsWebUIUtils.ProgressBar;\nPDFJS.GenericL10n = pdfjsWebGenericL10n.GenericL10n;\nPDFJS.NullL10n = pdfjsWebUIUtils.NullL10n;\nexports.PDFJS = PDFJS;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=pdf_viewer.js.map",null]}